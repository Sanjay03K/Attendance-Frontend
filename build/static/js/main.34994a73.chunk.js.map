{"version":3,"sources":["components/Card/Card.js","components/Card/CardBody.js","components/Card/CardHeader.js","views/Dashboard/GeneralInformation.js","assets/img/ProfileBackground.png","views/Dashboard/Profile.js","controller/changepassword.js","components/Icons/Icons.js","routes.js","views/Dashboard/Dashboard.js","assets/img/signInImage.png","views/Pages/SignIn.js","views/Pages/ExtraCurricularData.js","routes1.js","theme/styles.js","theme/foundations/breakpoints.js","theme/components/button.js","theme/additions/card/Card.js","theme/additions/card/CardBody.js","theme/additions/card/CardHeader.js","theme/additions/layout/MainPanel.js","theme/additions/layout/PanelContent.js","theme/additions/layout/PanelContainer.js","theme/theme.js","theme/foundations/fonts.js","theme/components/badge.js","theme/components/link.js","theme/components/drawer.js","components/Separator/Separator.js","components/Configurator/Configurator.js","assets/img/avatars/avatar1.png","assets/img/avatars/avatar2.png","assets/img/avatars/avatar3.png","components/Icons/IconBox.js","components/Sidebar/Sidebar.js","components/Navbars/AdminNavbarLinks.js","components/Navbars/AdminNavbar.js","components/Layout/MainPanel.js","components/Layout/PanelContainer.js","components/Layout/PanelContent.js","index.js","layouts/Auth.js","layouts/Admin.js"],"names":["Card","props","variant","children","rest","styles","useStyleConfig","__css","CardBody","CardHeader","GeneralInformation","useState","data","setData","dayData","setdayData","dept","setdept","course","setcourse","year","setyear","setday","sem","setsem","load","isload","done","isdone","over","isover","toast","useToast","toastIdRef","React","useRef","textColor","useColorModeValue","inputBg","mainorange","downloadXLSFile","a","s_url","JSON","stringify","config","method","url","responseType","headers","axios","response","outputFilename","Date","now","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","Error","direction","pt","base","md","mb","flexDirection","align","justify","w","fontSize","color","fontWeight","mr","mt","columns","sm","xl","gap","bg","borderRadius","_focus","borderColor","_active","placeholder","onChange","e","target","value","onClick","current","description","status","isClosable","email","localStorage","getItem","auth_token","post","then","results","length","catch","submit","colorScheme","alignSelf","width","overflowX","size","type","id","date","getElementById","split","join","end","setItem","err","undefined","final","i","day","map","item","parse","Object","keys","filter","key","p","my","pl","Profile","useDisclosure","isOpen","onOpen","onClose","bgProfile","borderProfileColor","emailColor","px","display","justifyContent","bgImage","ProfileBgImage","bgSize","h","bgPosition","bgRepeat","position","maxH","backdropFilter","boxShadow","border","transform","lg","textAlign","maxWidth","ms","placement","minWidth","leftIcon","Settings","Edit","marginLeft","m","style","oldpass","newpass","repass","checknum","match","checklower","checkupper","checksymbol","passlen","pcbtn","disabled","innerHTML","oldPass","newPass","rePass","console","log","params","URLSearchParams","append","server_URL","result","change_pass","HomeIcon","createIcon","displayName","viewBox","path","d","fill","height","rx","x1","y1","x2","y2","gradientUnits","offset","stroke","PersonIcon","xmlns","cx","cy","r","ProfileIcon","SettingsIcon","StatsIcon","dashRoutes","name","icon","component","ongo","setongo","upco","setupco","refresh","history","useHistory","useEffect","refreshpage","today","getHours","getMinutes","getSeconds","fetchdata","setInterval","courses","items","time","new_arr","start","start_time","end_time","parseFloat","push","new_arrs","spacing","cursor","code","minH","title","layout","secondaryNavbar","SignIn","titleColor","password","res","removeItem","maxW","mx","paddingTop","right","src","signInImage","alt","alignItems","userSelect","background","_hover","passcheck","ExtraCurricularData","NdashRoutes","setdata","present","setload","register_no","roll_no","textTransform","defaultValue","isLoading","globalStyles","colors","gray","global","mode","fontFamily","html","breakpoints","createBreakpoints","buttonStyles","components","Button","variants","baseStyle","CardComponent","wordWrap","backgroundClip","panel","colorMode","defaultProps","CardBodyComponent","CardHeaderComponent","MainPanelComponent","MainPanel","float","overflow","maxHeight","transition","transitionDuration","transitionProperty","transitionTimingFunction","main","rtl","PanelContentComponent","PanelContent","marginRight","paddingLeft","paddingRight","PanelContainerComponent","PanelContainer","padding","minHeight","extendTheme","Badge","sizes","Link","decoration","textDecoration","Drawer","bgColor","Separator","Configurator","rtlActive","secondary","fixed","isChecked","switched","setSwitched","useColorMode","toggleColorMode","fixedDisplay","settingsRef","finalFocusRef","blockScrollOnMount","ps","pe","paddingBottom","event","onSwitch","IconBox","SidebarResponsive","location","useLocation","state","mainPanel","logoText","routes","links","createLinks","activeBg","inactiveBg","activeColor","inactiveColor","prop","redirect","category","py","rtlName","views","to","routeName","pathname","boxSize","Icon","me","documentElement","dir","hamburgerColor","brand","process","lineHeight","btnRef","ref","Hamburger","Sidebar","variantChange","sidebarVariant","sidebarActiveShadow","sidebarBg","sidebarRadius","sidebarMargins","HeaderLinks","navbarIcon","AdminNavbar","scrolled","setScrolled","brandText","mainText","secondaryText","navbarPosition","navbarFilter","navbarBackdrop","navbarShadow","navbarBg","navbarBorder","secondaryMargin","paddingX","window","addEventListener","scrollY","borderWidth","borderStyle","transitionDelay","pb","top","ReactDOM","render","wrapper","createRef","navRef","theme","resetCss","getRoutes1","routes1","collapse","getRoutes","from","setSidebarVariant","setFixed","getActiveNavbar","categoryActiveNavbar","indexOf","getActiveRoute","activeRoute","collapseActiveRoute","categoryActiveRoute","onOpaque","onTransparent"],"mappings":"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","file":"static/js/main.34994a73.chunk.js","sourcesContent":["import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nfunction Card(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"Card\", { variant });\r\n  // Pass the computed styles into the `__css` prop\r\n  return (\r\n    <Box __css={styles} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nfunction CardBody(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"CardBody\", { variant });\r\n  // Pass the computed styles into the `__css` prop\r\n  return (\r\n    <Box __css={styles} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CardBody;\r\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nfunction CardHeader(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"CardHeader\", { variant });\r\n  // Pass the computed styles into the `__css` prop\r\n  return (\r\n    <Box __css={styles} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CardHeader;\r\n","import React, { useState } from \"react\";\r\nimport axios, { AxiosRequestConfig } from 'axios';\r\nimport fs from 'fs';\r\n\r\n// Chakra imports\r\nimport {\r\n  Flex,\r\n  Table,\r\n  Tbody,\r\n  Text,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n  useColorModeValue,\r\n  Button,\r\n  Input,\r\n  InputGroup,\r\n  SimpleGrid,\r\n  Box,\r\n  Spinner\r\n} from \"@chakra-ui/react\";\r\n\r\n// Custom components\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport { Select } from '@chakra-ui/react'\r\nimport { useToast } from '@chakra-ui/react'\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nfunction GeneralInformation() {\r\n  const [data, setData] = useState([]);\r\n  const [dayData, setdayData] = useState({});\r\n  const [count, setCount] = useState(0);\r\n  const [dept, setdept] = useState(null);\r\n  const [course, setcourse] = useState(null);\r\n  const [year, setyear] = useState(null);\r\n  const [day, setday] = useState(null);\r\n  const [sem, setsem] = useState(null);\r\n  const [load, isload] = useState(false);\r\n  const [done, isdone] = useState(false);\r\n  const [over, isover] = useState(false);\r\n  const toast = useToast()\r\n  const toastIdRef = React.useRef()\r\n\r\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\r\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\r\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\r\n  const[csvData,setCsvData]=React.useState([{\"Name\":\"Gowri\"}, {\"Name\":\"Siva\"},{\"Name\":\"Teja\"},{\"Name\":\"USA\"}])\r\n  const[fileName,setFileName]=React.useState(\"Reports\");\r\n\r\n  function submit() {\r\n    if(year==null || dept==null || sem==null || year=='' || dept=='' || sem==''){\r\n      toastIdRef.current = toast({ description: \"Select all the fields\", status: 'warning',isClosable: true })\r\n    }\r\n    else{\r\n      var email = localStorage.getItem(\"email\")\r\n      var auth_token = localStorage.getItem(\"token\")\r\n      axios.post(\"http://localhost:5000/report\", {\r\n        email,\r\n        auth_token,\r\n        year,\r\n        dept,\r\n        sem\r\n      }).then((results)=>{\r\n        if(results.data.length > 0){\r\n          isload(true)\r\n        }\r\n        else{\r\n          toastIdRef.current = toast({ description: \"No report found\", status: 'info',isClosable: true })\r\n        }\r\n      }).catch(()=>{\r\n        toastIdRef.current = toast({ description: \"No report found\", status: 'info',isClosable: true })\r\n      })\r\n    }\r\n  }\r\n\r\n  function final() {\r\n    var email = localStorage.getItem(\"email\")\r\n    var auth_token = localStorage.getItem(\"token\")\r\n    var date = document.getElementById(\"date\").value;\r\n    date = date.split('-').join('/')\r\n    var end = document.getElementById(\"end\").value;\r\n    end = end.split('-').join('/')\r\n    if(end=='' || date==''){\r\n      toastIdRef.current = toast({ description: \"Select all the fields\", status: 'warning',isClosable: true })\r\n    }\r\n    else{\r\n      axios.post(\"http://localhost:5000/full_report\", {\r\n        email,\r\n        auth_token,\r\n        date,\r\n        end,\r\n        year,\r\n        dept,\r\n        sem\r\n      }).then((results)=>{\r\n        if(results.data.length == 0){\r\n          toastIdRef.current = toast({ description: \"No report found\", status: 'info',isClosable: true })\r\n        }\r\n        else{\r\n          // if (results.data.length!=2) {\r\n          //   toastIdRef.current = toast({ description: \"No report found\", status: 'info',isClosable: true })\r\n          // }\r\n          // else{\r\n            localStorage.setItem(\"data\",results.data)\r\n            setData(results.data)\r\n            isload(false)\r\n          // }\r\n        }\r\n      }).catch((err)=>{\r\n        if (err.response.data!=undefined) {\r\n          toastIdRef.current = toast({ description: err.response.data, status: 'error',isClosable: true })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  function download_report() {\r\n    var email = localStorage.getItem(\"email\")\r\n    var auth_token = localStorage.getItem(\"token\")\r\n    let formdata = new FormData();\r\n    formdata.append(\"email\",email)\r\n    // axios({\r\n    //   url:\"http://localhost:5000/download_report\",\r\n    //   method:\"POST\",\r\n    //   responseType:'blob',\r\n    //   data:{\r\n    //     data:data,\r\n    //     sem:sem,\r\n    //     year:year\r\n    //   }\r\n    // }).then((response)=>{     \r\n    //   let headerLine = response.headers['content-disposition'];\r\n    //   let startFileNameIndex = headerLine.indexOf('\"') + 1\r\n    //   let endFileNameIndex = headerLine.lastIndexOf('\"')\r\n    //   let filename = headerLine.substring(startFileNameIndex, endFileNameIndex)\r\n    //   const url = window.URL.createObjectURL(new Blob([response.data], \r\n    //   {type:'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'}));\r\n    //   const link = document.createElement('a');\r\n   \r\n    //   link.href = url;\r\n    //   link.setAttribute('download', filename);\r\n    //   document.body.appendChild(link);\r\n    //   link.click();\r\n    //   link.remove();\r\n    // })\r\n    axios.get(\"http://localhost:5000/download_report?data=\"+JSON.stringify(localStorage.setItem(\"data\"))+\"&year=\"+year+\"&sem=\"+sem,+\"&dept=\"+dept, {\r\n      headers:{'Content-Type':'blob'},\r\n      responseType: 'arraybuffer'\r\n     }).then(response => {\r\n        let headerLine = response.headers['content-disposition'];\r\n        let startFileNameIndex = headerLine.indexOf('\"') + 1\r\n        let endFileNameIndex = headerLine.lastIndexOf('\"')\r\n        let filename = headerLine.substring(startFileNameIndex, endFileNameIndex)\r\n        console.log(response);\r\n        const url = window.URL.createObjectURL(new Blob([response.data], \r\n        {type:'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'}));\r\n        const link = document.createElement('a');\r\n     \r\n        link.href = url;\r\n        link.setAttribute('download', filename);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        link.remove();\r\n     }).catch(error => {\r\n        console.log(error)\r\n     })\r\n\r\n\r\n     \r\n  }\r\n\r\n  const downloadXLSFile = async () => {\r\n    let s_url = \"http://localhost:5000/download_report?data=\"+JSON.stringify(data)\r\n    // Its important to set the 'Content-Type': 'blob' and responseType:'arraybuffer'.\r\n    const headers = {'Content-Type': 'blob'};\r\n    const config = {method: 'GET', url: s_url, responseType: 'arraybuffer', headers};\r\n    \r\n    try {\r\n        const response = await axios(config);\r\n        \r\n        const outputFilename = dept+\"_\"+year+\"_\"+sem+\"-\"+Date.now()+\".xlsx\";\r\n\r\n        // If you want to download file automatically using link attribute.\r\n        const url = URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', outputFilename);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        link.remove();\r\n        // OR you can save/write file locally.\r\n    } catch (error) {\r\n        throw Error(error);\r\n    }\r\n}\r\n\r\n  return (\r\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\r\n\r\n      <Card mb=\"1rem\">\r\n        <CardBody>\r\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\r\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\r\n              View Report\r\n            </Text>\r\n          </Flex>\r\n        </CardBody>\r\n        <CardHeader mt=\"1em\">\r\n          {/* <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\r\n            Search Student\r\n          </Text> */}\r\n        </CardHeader>\r\n        <SimpleGrid columns={{ sm: 1, md: 3, xl: 3 }} gap={5}>\r\n            <Box>\r\n              <CardHeader mt=\"1em\">\r\n                <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\r\n                  Department\r\n                </Text>\r\n              </CardHeader>\r\n\r\n              <InputGroup\r\n                bg={inputBg}\r\n                mt=\"1rem\"\r\n                borderRadius=\"15px\"\r\n                w=\"cover\"\r\n                _focus={{\r\n                  borderColor: { mainorange },\r\n                }}\r\n                _active={{\r\n                  borderColor: { mainorange },\r\n                }}\r\n              >\r\n                <Select placeholder='Select Department' onChange={(e)=>{\r\n                  setdept(e.target.value)\r\n                }}>\r\n                  <option value='MECH'>MECH</option>\r\n                  <option value='CSE'>CSE</option>\r\n                  <option value='ECE'>ECE</option>\r\n                  <option value='EEE'>EEE</option>\r\n                  <option value='IT'>IT</option>\r\n                </Select>\r\n              </InputGroup>\r\n            </Box>\r\n\r\n            <Box>\r\n              <CardHeader mt=\"1em\">\r\n                <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\r\n                  Year\r\n                </Text>\r\n              </CardHeader>\r\n\r\n              <InputGroup\r\n                bg={inputBg}\r\n                mt=\"1rem\"\r\n                borderRadius=\"15px\"\r\n                w=\"cover\"\r\n                _focus={{\r\n                  borderColor: { mainorange },\r\n                }}\r\n                _active={{\r\n                  borderColor: { mainorange },\r\n                }}\r\n              >\r\n                <Select placeholder='Select Year' onChange={(e)=>{\r\n                  setyear(e.target.value)\r\n                }}>\r\n                  <option value='1'>1</option>\r\n                  <option value='2'>2</option>\r\n                  <option value='3'>3</option>\r\n                  <option value='4'>4</option>\r\n                </Select>\r\n              </InputGroup>\r\n            </Box>\r\n\r\n            <Box>\r\n              <CardHeader mt=\"1em\">\r\n                <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\r\n                  Semester\r\n                </Text>\r\n              </CardHeader>\r\n              <InputGroup\r\n                bg={inputBg}\r\n                mt=\"1rem\"\r\n                borderRadius=\"15px\"\r\n                w=\"cover\"\r\n                _focus={{\r\n                  borderColor: { mainorange },\r\n                }}\r\n                _active={{\r\n                  borderColor: { mainorange },\r\n                }}\r\n              >\r\n               <Select placeholder='Select Semester' onChange={(e)=>{\r\n                  setsem(e.target.value)\r\n                }}>\r\n                  <option value='1'>1</option>\r\n                  <option value='2'>2</option>\r\n                  <option value='3'>3</option>\r\n                  <option value='4'>4</option>\r\n                  <option value='5'>5</option>\r\n                  <option value='6'>6</option>\r\n                  <option value='7'>7</option>\r\n                  <option value='8'>8</option>\r\n                </Select>\r\n              </InputGroup>\r\n            </Box>\r\n          </SimpleGrid>\r\n\r\n        <Button\r\n          mt=\"1em\"\r\n          onClick={()=>{\r\n            submit()\r\n          }}\r\n          colorScheme=\"orange\"\r\n          alignSelf=\"flex-end\"\r\n          variant=\"solid\"\r\n          width=\"25%\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Card>\r\n\r\n    {load ? (\r\n       <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\r\n       <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={5}>\r\n          <Box>\r\n                <CardHeader mt=\"1em\">\r\n                  <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\r\n                    Start Date\r\n                  </Text>\r\n                </CardHeader>\r\n\r\n                <InputGroup\r\n                  bg={inputBg}\r\n                  mt=\"1rem\"\r\n                  borderRadius=\"15px\"\r\n                  w=\"cover\"\r\n                  _focus={{\r\n                    borderColor: { mainorange },\r\n                  }}\r\n                  _active={{\r\n                    borderColor: { mainorange },\r\n                  }}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Select Date and Time\"\r\n                    size=\"md\"\r\n                    type=\"date\"\r\n                    id=\"date\"\r\n                  />\r\n                </InputGroup>\r\n          </Box>\r\n          <Box>\r\n                <CardHeader mt=\"1em\">\r\n                  <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\r\n                    End Date\r\n                  </Text>\r\n                </CardHeader>\r\n\r\n                <InputGroup\r\n                  bg={inputBg}\r\n                  mt=\"1rem\"\r\n                  borderRadius=\"15px\"\r\n                  w=\"cover\"\r\n                  _focus={{\r\n                    borderColor: { mainorange },\r\n                  }}\r\n                  _active={{\r\n                    borderColor: { mainorange },\r\n                  }}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Select Date and Time\"\r\n                    size=\"md\"\r\n                    type=\"date\"\r\n                    id=\"end\"\r\n                  />\r\n                </InputGroup>\r\n          </Box>\r\n       </SimpleGrid>\r\n       <Button\r\n          mt=\"1em\"\r\n          onClick={()=>{\r\n            final()\r\n          }}\r\n          colorScheme=\"orange\"\r\n          alignSelf=\"flex-end\"\r\n          variant=\"solid\"\r\n          width=\"25%\"\r\n        >\r\n          Submit  \r\n        </Button>\r\n     </Card>\r\n    ) : (\r\n      <>\r\n      {\r\n      data.length > 0 ? (\r\n      <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>          \r\n        <CardHeader mt=\"1em\">\r\n            <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\r\n              Select Date\r\n            </Text>\r\n          </CardHeader>\r\n          <InputGroup\r\n            bg={inputBg}\r\n            mt=\"1rem\"\r\n            borderRadius=\"15px\"\r\n            w=\"cover\"\r\n            _focus={{\r\n              borderColor: { mainorange },\r\n            }}\r\n            _active={{\r\n              borderColor: { mainorange },\r\n            }}\r\n          >\r\n            <Select placeholder='Choose...' onChange={(e)=>{\r\n              if(e.target.value == ''){\r\n                isdone(false)\r\n                setcourse(null)\r\n                isover(false)\r\n              }\r\n              else{\r\n                setcourse(null)\r\n                isover(false)\r\n                  for (let i = 0; i < data.length; i++) {\r\n                    if(data[i].day == e.target.value){\r\n                      setdayData(data[i])\r\n                    }\r\n                  }\r\n                  setday(e.target.value)\r\n                  isdone(true)\r\n                }\r\n              }}>\r\n              {data.map((item) => (\r\n                <option value={item.day}>{item.day}</option>\r\n              ))}\r\n            </Select>\r\n          </InputGroup>\r\n          <Button\r\n            mt=\"1em\"\r\n            onClick={()=>{\r\n              downloadXLSFile()\r\n            }}\r\n            colorScheme=\"blue\"\r\n            alignSelf=\"flex-end\"\r\n            variant=\"solid\"\r\n            width=\"25%\"\r\n          >\r\n            Download Report  \r\n        </Button>\r\n      </Card>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      </>\r\n    )}  \r\n\r\n    {\r\n      done ? (\r\n        <>\r\n          <br/>\r\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>          \r\n            <CardHeader mt=\"1em\">\r\n                <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\r\n                  Select Course\r\n                </Text>\r\n              </CardHeader>\r\n              <InputGroup\r\n                bg={inputBg}\r\n                mt=\"1rem\"\r\n                borderRadius=\"15px\"\r\n                w=\"cover\"\r\n                _focus={{\r\n                  borderColor: { mainorange },\r\n                }}\r\n                _active={{\r\n                  borderColor: { mainorange },\r\n                }}\r\n              >\r\n                <Select placeholder='Choose...' onChange={(e)=>{\r\n                  if (dayData[e.target.value] == null && e.target.value != ''){\r\n                    isover(false)\r\n                    toastIdRef.current = toast({ description: \"No report found\", status: 'info',isClosable: true })\r\n                  }\r\n                  else if(e.target.value != ''){\r\n                    setcourse(JSON.parse(dayData[e.target.value])[0]);\r\n                    isover(true)\r\n                  }\r\n                }}>\r\n                  {\r\n                  Object.keys(dayData)\r\n                  .filter((key) => {\r\n                    if(key != 'day'){\r\n                       return key \r\n                    }\r\n                  })\r\n                  .map((key,i) => (\r\n                    <option value={key}>{key}</option>\r\n                  ))\r\n                  }\r\n                </Select>\r\n              </InputGroup>\r\n          </Card>\r\n        </>\r\n      ) :\r\n      <></>\r\n    }\r\n\r\n    {\r\n      over ? (\r\n        <>\r\n        <br/>\r\n        <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\r\n            <CardHeader p=\"6px 0px 22px 0px\">\r\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\r\n                Students List\r\n              </Text>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Table variant=\"simple\" color={textColor}>\r\n                <Thead>\r\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\r\n                    <Th color=\"gray.400\">Register No</Th>\r\n                    <Th color=\"gray.400\">Attended</Th>\r\n                  </Tr>\r\n                </Thead>\r\n                <Tbody>\r\n                {Object.keys(course).length > 0 ? (\r\n                        Object.keys(course).map((key,i) => (\r\n                            <>\r\n                              <Tr color=\"white.100\">\r\n                                <Th color=\"white.100\">{key}</Th>\r\n                                <Th color=\"white.100\">{course[key]}</Th>\r\n                              </Tr>\r\n                            </>\r\n                        )) \r\n                      ) : (\r\n                      <></>\r\n                    )}\r\n                </Tbody>\r\n              </Table>\r\n            </CardBody>\r\n          </Card>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )\r\n    }\r\n\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default GeneralInformation;\r\n","export default __webpack_public_path__ + \"static/media/ProfileBackground.f16e663c.png\";","/** @format */\r\n\r\n//Student Profile\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport change_pass from \"../../controller/changepassword\";\r\n// Chakra imports\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  SimpleGrid,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n  PopoverBody,\r\n  Portal,\r\n  Tr,\r\n  Td,\r\n  Input,\r\n  Text,\r\n  useColorModeValue,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport { SettingsIcon, EditIcon } from \"@chakra-ui/icons\";\r\n\r\nimport axios from \"axios\";\r\n// Custom components\r\nimport Card from \"components/Card/Card\";\r\nimport CardBody from \"components/Card/CardBody\";\r\nimport CardHeader from \"components/Card/CardHeader\";\r\n// Assets\r\nimport ProfileBgImage from \"assets/img/ProfileBackground.png\";\r\n\r\nimport { server_URL } from \"controller/urls_config\";\r\n\r\nfunction Profile() {\r\n  function validation() {\r\n    document.getElementById(\"pass-success\").style.display = \"none\";\r\n    var oldpass = document.getElementById(\"old-pass\").value;\r\n    var newpass = document.getElementById(\"new-pass\").value;\r\n    var repass = document.getElementById(\"re-pass\").value;\r\n    var numbers = /[0-9]/g;\r\n    var lowercase = /[a-z]/g;\r\n    var uppercase = /[A-Z]/g;\r\n    var symbol = /[!@#$%^&*]/g;\r\n    var checknum = newpass.match(numbers);\r\n    var checklower = newpass.match(lowercase);\r\n    var checkupper = newpass.match(uppercase);\r\n    var checksymbol = newpass.match(symbol);\r\n    var passlen = newpass.length;\r\n    // var repass = document.getElementById(\"repassword\").value;\r\n    if (\r\n      oldpass == newpass ||\r\n      passlen < 8 ||\r\n      checknum == null ||\r\n      checklower == null ||\r\n      checkupper == null ||\r\n      checksymbol == null ||\r\n      passlen >= 15 ||\r\n      newpass !== repass\r\n    ) {\r\n      if (oldpass == newpass) {\r\n        document.getElementById(\"pass-same\").style.display = \"block\";\r\n      } else {\r\n        document.getElementById(\"pass-same\").style.display = \"none\";\r\n      }\r\n\r\n      if (passlen < 8) {\r\n        document.getElementById(\"pass-len\").style.display = \"block\";\r\n      } else {\r\n        document.getElementById(\"pass-len\").style.display = \"none\";\r\n      }\r\n\r\n      if (checknum == null) {\r\n        document.getElementById(\"pass-num\").style.display = \"block\";\r\n      } else {\r\n        document.getElementById(\"pass-num\").style.display = \"none\";\r\n      }\r\n\r\n      if (checklower == null) {\r\n        document.getElementById(\"pass-lower\").style.display = \"block\";\r\n      } else {\r\n        document.getElementById(\"pass-lower\").style.display = \"none\";\r\n      }\r\n\r\n      if (checkupper == null) {\r\n        document.getElementById(\"pass-upper\").style.display = \"block\";\r\n      } else {\r\n        document.getElementById(\"pass-upper\").style.display = \"none\";\r\n      }\r\n\r\n      if (checksymbol == null) {\r\n        document.getElementById(\"pass-symbol\").style.display = \"block\";\r\n      } else {\r\n        document.getElementById(\"pass-symbol\").style.display = \"none\";\r\n      }\r\n\r\n      if (passlen <= 15) {\r\n        document.getElementById(\"pass-valid\").style.display = \"none\";\r\n      } else {\r\n        document.getElementById(\"pass-valid\").style.display = \"block\";\r\n      }\r\n\r\n      if (newpass == repass) {\r\n        document.getElementById(\"pass-equal\").style.display = \"none\";\r\n      } else {\r\n        document.getElementById(\"pass-equal\").style.display = \"block\";\r\n      }\r\n    } else {\r\n      document.getElementById(\"pass-same\").style.display = \"none\";\r\n      document.getElementById(\"pass-len\").style.display = \"none\";\r\n      document.getElementById(\"pass-num\").style.display = \"none\";\r\n      document.getElementById(\"pass-lower\").style.display = \"none\";\r\n      document.getElementById(\"pass-upper\").style.display = \"none\";\r\n      document.getElementById(\"pass-symbol\").style.display = \"none\";\r\n      document.getElementById(\"pass-valid\").style.display = \"none\";\r\n      document.getElementById(\"pass-equal\").style.display = \"none\";\r\n      change_pass();\r\n    }\r\n  }\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  // Chakra color mode\r\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\r\n  const bgProfile = useColorModeValue(\r\n    \"hsla(0,0%,100%,.8)\",\r\n    \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.21) 0%, rgba(255, 255, 255, 0) 110.84%)\"\r\n  );\r\n  const borderProfileColor = useColorModeValue(\r\n    \"white\",\r\n    \"rgba(255, 255, 255, 0.31)\"\r\n  );\r\n  const emailColor = useColorModeValue(\"gray.400\", \"gray.300\");\r\n  const [data, setData] = useState([]);\r\n\r\n  return (\r\n    <Flex direction=\"column\">\r\n    <Box\r\n      mb={{ sm: \"70px\" }}\r\n      borderRadius=\"15px\"\r\n      px=\"0px\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Box\r\n        bgImage={ProfileBgImage}\r\n        bgSize=\"cover\"\r\n        w=\"100%\"\r\n        h=\"250px\"\r\n        borderRadius=\"25px\"\r\n        bgPosition=\"50%\"\r\n        bgRepeat=\"no-repeat\"\r\n        position=\"relative\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Flex\r\n          direction={{ sm: \"column\", md: \"row\" }}\r\n          mt={{ sm: \"3em\", md: \"0em\" }}\r\n          maxH=\"330px\"\r\n          w={{ sm: \"90%\", xl: \"95%\" }}\r\n          justifyContent={{ sm: \"space-between\" }}\r\n          align=\"center\"\r\n          backdropFilter=\"saturate(200%) blur(50px)\"\r\n          position=\"absolute\"\r\n          boxShadow=\"0px 2px 5.5px rgba(0, 0, 0, 0.02)\"\r\n          border=\"2px solid\"\r\n          borderColor={borderProfileColor}\r\n          bg={bgProfile}\r\n          p=\"24px\"\r\n          borderRadius=\"20px\"\r\n          transform={{\r\n            sm: \"translateY(45%)\",\r\n            md: \"translateY(120%)\",\r\n            lg: \"translateY(120%)\",\r\n          }}\r\n        >\r\n          <Flex\r\n            align=\"center\"\r\n            mb={{ sm: \"10px\", md: \"0px\" }}\r\n            direction={{ sm: \"column\", md: \"row\" }}\r\n            w={{ sm: \"100%\" }}\r\n            textAlign={{ sm: \"center\", md: \"start\" }}\r\n          >\r\n            <Flex direction=\"column\" maxWidth=\"100%\" my={{ sm: \"14px\" }}>\r\n              <Text\r\n                fontSize={{ sm: \"lg\", lg: \"xl\" }}\r\n                color={textColor}\r\n                fontWeight=\"bold\"\r\n                ms={{ sm: \"8px\", md: \"0px\" }}\r\n              >\r\n                {localStorage.getItem(\"name\")}\r\n              </Text>\r\n              <Text\r\n                fontSize={{ sm: \"sm\", md: \"md\" }}\r\n                color={emailColor}\r\n                fontWeight=\"semibold\"\r\n              >\r\n                {localStorage.getItem(\"email\")}\r\n              </Text>\r\n            </Flex>\r\n          </Flex>\r\n          <Popover placement=\"auto\">\r\n            <PopoverTrigger>\r\n              <Button\r\n                minWidth=\"-moz-fit-content\"\r\n                leftIcon={<SettingsIcon />}\r\n                colorScheme=\"orange\"\r\n              >\r\n                Settings\r\n              </Button>\r\n            </PopoverTrigger>\r\n            <Portal>\r\n              <PopoverContent>\r\n                <PopoverArrow />\r\n                <PopoverCloseButton />\r\n                <PopoverHeader>Available Settings</PopoverHeader>\r\n                <PopoverBody>\r\n                  <Button onClick={onOpen} leftIcon={<EditIcon />}>\r\n                    Change Password\r\n                  </Button>\r\n                </PopoverBody>\r\n              </PopoverContent>\r\n            </Portal>\r\n          </Popover>\r\n          <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n              <ModalHeader>Change Password</ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody>\r\n                <Tr>\r\n                  <Td>\r\n                    <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\" mb=\"2em\">\r\n                      Enter old Password\r\n                    </Text>\r\n                  </Td>\r\n                  <Td>\r\n                    <Input\r\n                      ms=\"1em\"\r\n                      width={{ sm: \"16em\", md: \"23em\" }}\r\n                      borderRadius=\"5px\"\r\n                      fontSize=\"sm\"\r\n                      type=\"password\"\r\n                      placeholder=\"Enter Old Password\"\r\n                      id=\"old-pass\"\r\n                    />\r\n                  </Td>\r\n                </Tr>\r\n                <Tr>\r\n                  <Td>\r\n                    <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\" mb=\"2em\">\r\n                      Enter new Password\r\n                    </Text>\r\n                  </Td>\r\n                  <Td>\r\n                    <Input\r\n                      ms=\"1em\"\r\n                      width={{ sm: \"16em\", md: \"23em\" }}\r\n                      borderRadius=\"5px\"\r\n                      fontSize=\"sm\"\r\n                      type=\"password\"\r\n                      placeholder=\"Enter New Password\"\r\n                      id=\"new-pass\"\r\n                    />\r\n                  </Td>\r\n                </Tr>\r\n                <Tr>\r\n                  <Td>\r\n                    <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\">\r\n                      Re enter new Password\r\n                    </Text>\r\n                  </Td>\r\n                  <Td>\r\n                    <Input\r\n                      ms=\"1em\"\r\n                      width={{ sm: \"16em\", md: \"23em\" }}\r\n                      borderRadius=\"5px\"\r\n                      fontSize=\"sm\"\r\n                      type=\"password\"\r\n                      placeholder=\"Re-Enter New Password\"\r\n                      id=\"re-pass\"\r\n                    />\r\n                  </Td>\r\n                </Tr>\r\n                <SimpleGrid marginLeft=\"auto\" width=\"fit-content\" gap={5}>\r\n                  <Button\r\n                    m=\"1em\"\r\n                    colorScheme=\"orange\"\r\n                    variant=\"solid\"\r\n                    id=\"pass-button\"\r\n                    onClick={validation}\r\n                  >\r\n                    Change Password\r\n                  </Button>\r\n                </SimpleGrid>\r\n                <Text\r\n                  color=\"red\"\r\n                  id=\"pass-mis\"\r\n                  display=\"none\"\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  Passwords Don't Match\r\n                </Text>\r\n                <Text\r\n                  color=\"red\"\r\n                  id=\"pass-fail\"\r\n                  display=\"none\"\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  Incorrect Old Password or Username or Invalid User\r\n                </Text>\r\n                <Text\r\n                  color=\"red\"\r\n                  id=\"server-fail\"\r\n                  display=\"none\"\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  Server Error. Try again after some time\r\n                </Text>\r\n                <Text\r\n                  color=\"green\"\r\n                  id=\"pass-success\"\r\n                  display=\"none\"\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  Password Changed Successfully\r\n                </Text>\r\n                <Text\r\n                  color=\"red\"\r\n                  id=\"pass-same\"\r\n                  display=\"none\"\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  New password cannot be same as the old password\r\n                </Text>\r\n                <Text\r\n                  color=\"red\"\r\n                  id=\"pass-num\"\r\n                  display=\"none\"\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  Your new password should contain atleast 1 number\r\n                </Text>\r\n                <Text\r\n                  color=\"red\"\r\n                  id=\"pass-len\"\r\n                  display=\"none\"\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  Your password should be atleast 8 characters\r\n                </Text>\r\n                <Text\r\n                  color=\"red\"\r\n                  id=\"pass-lower\"\r\n                  display=\"none\"\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  Your password should conatin at least 1 lowercase character\r\n                </Text>\r\n                <Text\r\n                  color=\"red\"\r\n                  id=\"pass-upper\"\r\n                  display=\"none\"\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  Your password should conatin at least 1 uppercase character\r\n                </Text>\r\n                <Text\r\n                  color=\"red\"\r\n                  id=\"pass-symbol\"\r\n                  display=\"none\"\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  Your password should conatin at least 1 special\r\n                  character.Allowed special characters(!,@,#,$,%,^,&,*)\r\n                </Text>\r\n                <Text\r\n                  color=\"red\"\r\n                  id=\"pass-valid\"\r\n                  display=\"none\"\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  Your password should be between 8 and 15 characters\r\n                </Text>\r\n                <Text\r\n                  color=\"red\"\r\n                  id=\"pass-equal\"\r\n                  display=\"none\"\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  Re entered password and new password dosen't match\r\n                </Text>\r\n              </ModalBody>\r\n            </ModalContent>\r\n          </Modal>\r\n\r\n          <Flex\r\n            direction={{ sm: \"column\", lg: \"row\" }}\r\n            w={{ sm: \"100%\", md: \"50%\", lg: \"auto\" }}\r\n          ></Flex>\r\n        </Flex>\r\n      </Box>\r\n    </Box>\r\n  </Flex>\r\n  );\r\n}\r\n\r\nexport default Profile;","import axios from \"axios\";\r\n\r\n// var server_URL = \"http://192.168.1.145:8080/\";\r\nimport { server_URL } from \"./urls_config\";\r\nexport default function change_pass() {\r\n  document.getElementById(\"pass-fail\").style.display = \"none\";\r\n  document.getElementById(\"pass-mis\").style.display = \"none\";\r\n  document.getElementById(\"server-fail\").style.display = \"none\";\r\n  document.getElementById(\"pass-success\").style.display = \"none\";\r\n  const pcbtn = document.getElementById(\"pass-button\");\r\n  pcbtn.disabled = true;\r\n  pcbtn.innerHTML = `<div class=\"spinner-border text-primary p-2 spinner-border-sm\" role=\"status\" aria-hidden=\"true\"><span class=\"visually-hidden\">Loading...</span></div>`;\r\n  var oldPass = document.getElementById(\"old-pass\").value;\r\n  var newPass = document.getElementById(\"new-pass\").value;\r\n  var rePass = document.getElementById(\"re-pass\").value;\r\n  console.log(oldPass);\r\n  if (newPass == rePass) {\r\n    let params = new URLSearchParams();\r\n    params.append(\"newpass\", newPass);\r\n    params.append(\"oldpass\", oldPass);\r\n    params.append(\"email\", localStorage.getItem(\"email\"));\r\n    params.append(\"auth_token\", localStorage.getItem(\"token\"));\r\n    axios.post(server_URL + \"passchange\", params).then((result) => {\r\n      console.log(result.data);\r\n      if (result.data == \"pass-fail\") {\r\n        document.getElementById(\"pass-fail\").style.display = \"block\";\r\n        pcbtn.disabled = false;\r\n        pcbtn.innerHTML = `Change Password`;\r\n      } else if (result.data === \"server-fail\") {\r\n        document.getElementById(\"server-fail\").style.display = \"block\";\r\n        pcbtn.disabled = false;\r\n        pcbtn.innerHTML = `Change Password`;\r\n      } else {\r\n        document.getElementById(\"pass-success\").style.display = \"block\";\r\n        pcbtn.innerHTML = `Change Password`;\r\n        pcbtn.disabled = false;\r\n      }\r\n    });\r\n  } else {\r\n    document.getElementById(\"pass-mis\").style.display = \"block\";\r\n    pcbtn.disabled = false;\r\n    pcbtn.innerHTML = `Change Password`;\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport { createIcon } from \"@chakra-ui/icons\";\r\n\r\nexport const AdobexdLogo = createIcon({\r\n  displayName: \"AdobexdLogo\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g clip-path=\"url(#clip0)\">\r\n      <path\r\n        d=\"M4.042 0h12.916A3.539 3.539 0 0120.5 3.542v12.416a3.539 3.539 0 01-3.542 3.542H4.042A3.539 3.539 0 01.5 15.958V3.542A3.539 3.539 0 014.042 0z\"\r\n        fill=\"#470137\"\r\n      />\r\n      <path\r\n        d=\"M11.017 5.124l-2.5 4.125 2.666 4.375a.143.143 0 01.017.1c-.008.034-.042.009-.092.017H9.2c-.133 0-.225-.008-.283-.092-.175-.35-.359-.691-.534-1.041a33.608 33.608 0 00-.566-1.05c-.2-.359-.4-.717-.6-1.084H7.2c-.175.359-.367.717-.558 1.075-.192.359-.384.717-.567 1.067-.192.35-.383.708-.575 1.05-.033.083-.1.092-.192.092H3.475c-.033 0-.058.016-.058-.025a.116.116 0 01.016-.092l2.592-4.25L3.5 5.116c-.025-.033-.033-.067-.017-.083.017-.025.05-.034.084-.034h1.891c.042 0 .084.009.117.017a.236.236 0 01.083.075c.159.358.342.717.534 1.075.2.358.391.708.6 1.058.2.35.383.7.558 1.059h.017c.175-.367.358-.725.541-1.075.184-.35.375-.7.567-1.05.192-.35.375-.709.558-1.05.009-.034.025-.067.05-.084a.159.159 0 01.109-.016h1.758a.077.077 0 01.091.058c.009.008-.008.042-.024.058zM14.866 13.917a4.144 4.144 0 01-1.791-.375 2.906 2.906 0 01-1.259-1.134c-.308-.508-.458-1.141-.458-1.9a3.423 3.423 0 011.783-3.05c.584-.325 1.284-.483 2.109-.483.041 0 .1 0 .175.008.075.009.158.009.258.017V4.367c0-.059.025-.092.083-.092h1.692c.042-.008.075.025.083.058v7.95c0 .15.009.317.017.5.017.175.025.342.033.484 0 .058-.025.108-.083.133a6.365 6.365 0 01-1.358.4 7.35 7.35 0 01-1.284.117zm.817-1.667V8.583c-.075-.016-.15-.033-.225-.041-.092-.009-.183-.017-.275-.017-.325 0-.65.067-.942.217-.283.141-.525.35-.708.616-.183.267-.275.625-.275 1.059-.008.291.042.583.142.858.083.225.208.425.375.592.158.15.35.266.566.333.225.075.459.108.692.108.125 0 .242-.008.35-.016a.73.73 0 00.3-.042z\"\r\n        fill=\"#FF61F6\"\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const AtlassianLogo = createIcon({\r\n  displayName: \"AtlassianLogo\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path\r\n        d=\"M6.427 9.239a.57.57 0 00-.798-.108.591.591 0 00-.167.209l-4.9 9.803a.586.586 0 00.524.847h6.827a.562.562 0 00.523-.324c1.474-3.043.58-7.67-2.01-10.427z\"\r\n        fill=\"#2684FF\"\r\n      />\r\n      <path\r\n        d=\"M10.028.318a12.932 12.932 0 00-.755 12.765l3.292 6.583a.586.586 0 00.523.324h6.826a.583.583 0 00.586-.585c0-.091-.02-.18-.06-.262L11.024.315a.552.552 0 00-.997 0v.003z\"\r\n        fill=\"#2684FF\"\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const CartIcon = createIcon({\r\n  displayName: \"CartIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M7.984 19.937a1.406 1.406 0 100-2.812 1.406 1.406 0 000 2.812zM17.828 19.937a1.406 1.406 0 100-2.812 1.406 1.406 0 000 2.812zM20.324 5.558a1.051 1.051 0 00-.815-.386H6.134l-.27-1.528a.703.703 0 00-.692-.581H2.359a.703.703 0 000 1.406h2.223L6.59 15.841a.703.703 0 00.692.581h11.25a.703.703 0 100-1.406H7.871l-.248-1.406h10.62a1.057 1.057 0 001.035-.848l1.266-6.328a1.055 1.055 0 00-.22-.876z\"\r\n    />\r\n  ),\r\n});\r\n\r\nexport const ClockIcon = createIcon({\r\n  displayName: \"ClockIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <g>\r\n        <rect fill=\"none\" height=\"24\" width=\"24\" />\r\n      </g>\r\n      <g>\r\n        <g>\r\n          <g>\r\n            <path\r\n              fill=\"currentColor\"\r\n              d=\"M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10s10-4.5,10-10S17.5,2,12,2z M16.2,16.2L11,13V7h1.5v5.2l4.5,2.7L16.2,16.2z\"\r\n            />\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const CreditIcon = createIcon({\r\n  displayName: \"CreditIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M1.406 17.023a2.461 2.461 0 002.461 2.46h14.766a2.461 2.461 0 002.46-2.46v-6.768H1.407v6.768zm2.9-3.34a1.318 1.318 0 011.319-1.318h2.11a1.318 1.318 0 011.318 1.318v.879a1.318 1.318 0 01-1.319 1.318H5.625a1.318 1.318 0 01-1.318-1.318v-.879zM18.633 4.014H3.867a2.46 2.46 0 00-2.46 2.461v1.143h19.687V6.475a2.46 2.46 0 00-2.461-2.46z\"\r\n    />\r\n  ),\r\n});\r\n\r\nexport const DashboardLogo = createIcon({\r\n  displayName: \"DashboardLogo\",\r\n  viewBox: \"0 0 1000 257\",\r\n  path: (\r\n    <g width=\"998\" height=\"257\" viewBox=\"0 0 998 257\" fill=\"none\">\r\n      <g clip-path=\"url(#clip0)\">\r\n        <path\r\n          d=\"M388.5 115.302C406.112 115.302 413.966 126.726 416.584 136.96L441.336 127.916C436.576 109.352 419.44 89.836 388.262 89.836C354.942 89.836 329 115.54 329 151.24C329 186.464 354.942 212.882 388.976 212.882C419.44 212.882 436.814 193.128 442.288 175.04L418.012 166.234C415.394 175.04 407.064 187.654 388.976 187.654C371.602 187.654 356.608 174.564 356.608 151.24C356.608 127.916 371.602 115.302 388.5 115.302Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n        <path\r\n          d=\"M484.894 141.244C485.37 126.488 493.7 115.064 508.932 115.064C526.306 115.064 532.732 126.488 532.732 140.768V209.312H560.34V136.008C560.34 110.542 546.536 90.074 517.976 90.074C505.838 90.074 492.748 94.358 484.894 104.592V37H457.286V209.312H484.894V141.244Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n        <path\r\n          d=\"M577.29 177.896C577.29 196.222 592.284 212.882 616.56 212.882C635.362 212.882 646.786 203.362 652.26 194.556C652.26 203.838 653.212 208.598 653.45 209.312H679.154C678.916 208.122 677.726 201.22 677.726 190.748V133.152C677.726 110.066 664.16 89.836 628.46 89.836C599.9 89.836 581.812 107.686 579.67 127.678L604.898 133.39C606.088 121.728 614.18 112.446 628.698 112.446C643.93 112.446 650.594 120.3 650.594 130.058C650.594 134.104 648.69 137.436 642.026 138.388L612.276 142.91C592.522 145.766 577.29 157.19 577.29 177.896ZM621.796 191.224C610.848 191.224 604.898 184.084 604.898 176.23C604.898 166.71 611.8 161.95 620.368 160.522L650.594 156V161.236C650.594 183.846 637.266 191.224 621.796 191.224Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n        <path\r\n          d=\"M810.108 93.406H773.456L728.95 140.292V37H701.58V209.312H728.95V176.944L743.23 161.95L777.264 209.312H811.06L762.508 142.434L810.108 93.406Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n        <path\r\n          d=\"M889.349 92.692C888.159 92.454 885.303 91.978 881.971 91.978C866.739 91.978 853.887 99.356 848.413 111.97V93.406H821.519V209.312H849.127V154.096C849.127 132.438 858.885 120.062 880.305 120.062C883.161 120.062 886.255 120.3 889.349 120.776V92.692Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n        <path\r\n          d=\"M895.968 177.896C895.968 196.222 910.962 212.882 935.238 212.882C954.04 212.882 965.464 203.362 970.938 194.556C970.938 203.838 971.89 208.598 972.128 209.312H997.832C997.594 208.122 996.404 201.22 996.404 190.748V133.152C996.404 110.066 982.838 89.836 947.138 89.836C918.578 89.836 900.49 107.686 898.348 127.678L923.576 133.39C924.766 121.728 932.858 112.446 947.376 112.446C962.608 112.446 969.272 120.3 969.272 130.058C969.272 134.104 967.368 137.436 960.704 138.388L930.954 142.91C911.2 145.766 895.968 157.19 895.968 177.896ZM940.474 191.224C929.526 191.224 923.576 184.084 923.576 176.23C923.576 166.71 930.478 161.95 939.046 160.522L969.272 156V161.236C969.272 183.846 955.944 191.224 940.474 191.224Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n        <rect width=\"257\" height=\"257\" rx=\"128.5\" fill=\"#4FD1C5\" />\r\n        <path\r\n          d=\"M69.5584 133.985L157.15 46.9959C158.787 45.3708 161.42 47.3484 160.315 49.3729L127.714 109.125C126.987 110.457 127.951 112.083 129.47 112.083H185.809C187.624 112.083 188.501 114.306 187.174 115.545L88.4456 207.687C86.6753 209.339 84.0405 207.011 85.4617 205.051L132.197 140.578C133.156 139.256 132.211 137.404 130.578 137.404H70.9677C69.1826 137.404 68.2917 135.243 69.5584 133.985Z\"\r\n          fill=\"white\"\r\n        />\r\n      </g>\r\n      <defs>\r\n        <linearGradient\r\n          id=\"paint0_linear\"\r\n          x1=\"128.5\"\r\n          y1=\"0\"\r\n          x2=\"128.5\"\r\n          y2=\"257\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stop-color=\"#7BCBD4\" />\r\n          <stop offset=\"1\" stop-color=\"#29C6B7\" />\r\n        </linearGradient>\r\n        <clipPath id=\"clip0\">\r\n          <rect width=\"997.832\" height=\"257\" fill=\"white\" />\r\n        </clipPath>\r\n      </defs>\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const DashboardLogoWhite = createIcon({\r\n  displayName: \"DashboardLogo\",\r\n  viewBox: \"0 0 163.5 42\",\r\n  path: (\r\n    <g fill=\"none\">\r\n      <path\r\n        d=\"M63.452 19.292c2.877 0 4.16 1.911 4.587 3.623l4.043-1.513c-.777-3.106-3.576-6.371-8.668-6.371-5.443 0-9.68 4.3-9.68 10.274 0 5.893 4.237 10.313 9.796 10.313 4.976 0 7.813-3.305 8.707-6.331l-3.965-1.473c-.427 1.473-1.788 3.583-4.742 3.583-2.837 0-5.286-2.19-5.286-6.092 0-3.903 2.449-6.013 5.208-6.013zM79.196 23.632c.078-2.469 1.438-4.38 3.926-4.38 2.838 0 3.887 1.911 3.887 4.3v11.47h4.51V22.755c0-4.26-2.255-7.685-6.92-7.685-1.982 0-4.12.716-5.403 2.429V6.19h-4.509v28.831h4.51V23.632zM94.287 29.765c0 3.066 2.449 5.853 6.414 5.853 3.071 0 4.936-1.592 5.83-3.066 0 1.553.156 2.35.195 2.47h4.198c-.039-.2-.233-1.355-.233-3.107v-9.637c0-3.862-2.216-7.247-8.047-7.247-4.664 0-7.619 2.986-7.968 6.332l4.12.955c.194-1.951 1.516-3.504 3.887-3.504 2.488 0 3.576 1.314 3.576 2.947 0 .677-.311 1.234-1.399 1.393l-4.859.757c-3.226.478-5.714 2.39-5.714 5.854zm7.269 2.23c-1.788 0-2.76-1.195-2.76-2.509 0-1.593 1.127-2.39 2.527-2.628l4.936-.757v.876c0 3.783-2.176 5.018-4.703 5.018zM132.312 15.628h-5.986l-7.269 7.845V6.191h-4.47v28.83h4.47v-5.416l2.332-2.508 5.559 7.924h5.52l-7.93-11.19 7.774-8.203zM145.254 15.509a6.3 6.3 0 00-1.205-.12c-2.487 0-4.587 1.235-5.481 3.345v-3.106h-4.392v19.393h4.509v-9.238c0-3.624 1.594-5.695 5.092-5.695.467 0 .972.04 1.477.12v-4.7zM146.335 29.765c0 3.066 2.449 5.853 6.414 5.853 3.071 0 4.937-1.592 5.831-3.066 0 1.553.156 2.35.194 2.47h4.199c-.039-.2-.234-1.355-.234-3.107v-9.637c0-3.862-2.215-7.247-8.046-7.247-4.665 0-7.619 2.986-7.969 6.332l4.121.955c.194-1.951 1.516-3.504 3.887-3.504 2.488 0 3.576 1.314 3.576 2.947 0 .677-.311 1.234-1.399 1.393l-4.859.757c-3.227.478-5.715 2.39-5.715 5.854zm7.269 2.23c-1.788 0-2.759-1.195-2.759-2.509 0-1.593 1.127-2.39 2.526-2.628l4.937-.757v.876c0 3.783-2.177 5.018-4.704 5.018zM41.975 21.5C41.975 9.626 32.578 0 20.987 0 9.398 0 0 9.626 0 21.5S9.396 43 20.988 43c11.59 0 20.987-9.626 20.987-21.5z\"\r\n        fill=\"#fff\"\r\n      />\r\n      <path\r\n        d=\"M11.36 22.418L25.668 7.863c.267-.272.697.06.517.398l-5.325 9.997c-.119.223.039.495.287.495h9.202c.296 0 .44.372.223.58L14.446 34.748c-.29.277-.72-.113-.488-.44l7.633-10.788c.157-.221.003-.531-.264-.531H11.59c-.292 0-.437-.362-.23-.572z\"\r\n        fill=\"#3BCBBE\"\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const DocumentIcon = createIcon({\r\n  displayName: \"DocumentIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M18.809 10.344h-6.153a2.11 2.11 0 01-2.11-2.11V2.083a.176.176 0 00-.175-.176H6.328A2.812 2.812 0 003.516 4.72v14.063a2.812 2.812 0 002.812 2.812h9.844a2.812 2.812 0 002.812-2.813V10.52a.176.176 0 00-.175-.176z\"\r\n      />\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M18.423 8.789l-6.32-6.32a.088.088 0 00-.15.062v5.705a.703.703 0 00.703.703h5.705a.088.088 0 00.062-.15z\"\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const GlobeIcon = createIcon({\r\n  displayName: \"GlobeIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path\r\n        stroke=\"currentColor\"\r\n        fill=\"transparent\"\r\n        d=\"M11.25 2.109a9.14 9.14 0 100 18.281 9.14 9.14 0 000-18.281z\"\r\n        stroke-width=\".75\"\r\n        stroke-miterlimit=\"10\"\r\n      />\r\n      <path\r\n        stroke=\"currentColor\"\r\n        fill=\"transparent\"\r\n        d=\"M11.25 2.109C8.698 2.109 6.3 6.2 6.3 11.249c0 5.048 2.4 9.14 4.951 9.14 2.552 0 4.951-4.092 4.951-9.14 0-5.048-2.399-9.14-4.95-9.14z\"\r\n        stroke-width=\".75\"\r\n        stroke-miterlimit=\"10\"\r\n      />\r\n      <path\r\n        stroke=\"currentColor\"\r\n        fill=\"transparent\"\r\n        d=\"M5.156 5.156C6.836 6.349 8.952 7.06 11.25 7.06c2.298 0 4.414-.711 6.094-1.904\"\r\n      />\r\n      <path\r\n        stroke=\"currentColor\"\r\n        fill=\"transparent\"\r\n        d=\"M5.156 5.156C6.836 6.349 8.952 7.06 11.25 7.06c2.298 0 4.414-.711 6.094-1.904M17.344 17.344c-1.68-1.193-3.796-1.904-6.094-1.904-2.298 0-4.413.711-6.094 1.904\"\r\n        stroke-width=\".75\"\r\n        stroke-linecap=\"round\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n      <path\r\n        stroke=\"currentColor\"\r\n        fill=\"transparent\"\r\n        d=\"M11.25 2.109v18.28M20.39 11.249H2.11\"\r\n        stroke-width=\".75\"\r\n        stroke-miterlimit=\"10\"\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const HelpIcon = createIcon({\r\n  displayName: \"HelpIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M11.25 0C5.04 0 0 5.04 0 11.25S5.04 22.5 11.25 22.5 22.5 17.46 22.5 11.25 17.46 0 11.25 0zm-.352 17.813a1.172 1.172 0 110-2.344 1.172 1.172 0 010 2.344zm1.96-5.977c-.95.637-1.08 1.222-1.08 1.758a.82.82 0 11-1.641 0c0-1.284.59-2.305 1.806-3.121 1.13-.758 1.768-1.239 1.768-2.295 0-.718-.41-1.264-1.26-1.668-.199-.095-.644-.187-1.191-.18-.687.008-1.22.172-1.63.503-.775.623-.84 1.302-.84 1.312a.821.821 0 11-1.642-.08c.007-.142.106-1.425 1.452-2.507.698-.562 1.585-.854 2.636-.866.745-.01 1.444.117 1.918.34 1.418.672 2.198 1.79 2.198 3.146 0 1.982-1.325 2.872-2.494 3.658z\"\r\n    />\r\n  ),\r\n});\r\n\r\nexport const HomeIcon = createIcon({\r\n  displayName: \"HomeIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M11.494 4.951a.351.351 0 00-.486 0l-8.09 7.729a.352.352 0 00-.109.254v7.254a1.406 1.406 0 001.405 1.406h4.223a.703.703 0 00.704-.703v-5.976a.351.351 0 01.351-.352h3.516a.351.351 0 01.351.352v5.976a.703.703 0 00.704.703h4.22a1.407 1.407 0 001.407-1.406v-7.254a.35.35 0 00-.108-.254L11.494 4.95z\"\r\n      />\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M21.574 11.23l-3.287-3.144V3.314a.703.703 0 00-.703-.703h-2.11a.703.703 0 00-.703.703V4.72l-2.545-2.434c-.239-.24-.593-.378-.976-.378-.38 0-.734.138-.972.379L.93 11.23a.717.717 0 00-.058.983.703.703 0 001.018.046l9.119-8.713a.352.352 0 01.486 0l9.12 8.713a.703.703 0 00.992-.019c.27-.28.248-.74-.033-1.01z\"\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const InvisionLogo = createIcon({\r\n  displayName: \"InvisionLogo\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g clip-path=\"url(#clip0)\">\r\n      <path\r\n        d=\"M18.687 0H2.313A1.813 1.813 0 00.5 1.811v16.374C.5 19.188 1.312 20 2.313 20h16.374a1.813 1.813 0 001.813-1.813V1.812A1.813 1.813 0 0018.687 0z\"\r\n        fill=\"#DC395F\"\r\n      />\r\n      <path\r\n        d=\"M7.184 6.293c.665 0 1.222-.522 1.222-1.204 0-.683-.557-1.204-1.222-1.204-.665 0-1.222.521-1.222 1.204 0 .682.557 1.204 1.222 1.204zM4.65 12.739a4.134 4.134 0 00-.108.905c0 1.06.575 1.764 1.797 1.764 1.013 0 1.834-.602 2.426-1.573l-.361 1.449h2.012l1.15-4.612c.287-1.168.844-1.774 1.689-1.774.665 0 1.078.413 1.078 1.096 0 .197-.018.413-.09.646l-.593 2.12c-.09.306-.126.611-.126.899 0 1.006.593 1.742 1.833 1.742 1.06 0 1.904-.682 2.371-2.317l-.79-.305c-.395 1.095-.737 1.293-1.006 1.293-.27 0-.414-.18-.414-.538 0-.162.037-.342.09-.558l.575-2.065c.144-.485.198-.915.198-1.31 0-1.546-.934-2.352-2.066-2.352-1.06 0-2.138.956-2.677 1.962l.395-1.806H8.962L8.53 8.996h1.438l-.885 3.544c-.695 1.545-1.972 1.57-2.132 1.534-.264-.06-.432-.159-.432-.5 0-.198.036-.482.126-.823l1.348-5.346H4.579l-.431 1.591h1.419L4.65 12.74\"\r\n        fill=\"#fff\"\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const JiraLogo = createIcon({\r\n  displayName: \"JiraLogo\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g clip-path=\"url(#clip0)\">\r\n      <path\r\n        d=\"M20.26 10.42l-8.863-8.93-.86-.865-6.67 6.722L.814 10.42a.827.827 0 000 1.162l6.096 6.14 3.627 3.654 6.67-6.722.105-.104 2.947-2.964a.824.824 0 000-1.166zm-9.722 3.649L7.493 11l3.045-3.068L13.582 11l-3.044 3.068z\"\r\n        fill=\"#2684FF\"\r\n      />\r\n      <path\r\n        d=\"M10.537 7.932a5.184 5.184 0 01-1.502-3.637A5.185 5.185 0 0110.515.65L3.852 7.36l3.626 3.654 3.06-3.082z\"\r\n        fill=\"url(#paint0_linear)\"\r\n      />\r\n      <path\r\n        d=\"M13.59 10.992l-3.053 3.076a5.186 5.186 0 011.502 3.653c0 1.37-.54 2.683-1.502 3.652l6.682-6.728-3.63-3.653z\"\r\n        fill=\"url(#paint1_linear)\"\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const MastercardIcon = createIcon({\r\n  displayName: \"MastercardIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <svg\r\n      width=\"24\"\r\n      height=\"20\"\r\n      viewBox=\"0 0 21 15\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <circle cx=\"6.63158\" cy=\"7.49999\" r=\"6.63158\" fill=\"#EB001B\" />\r\n      <circle cx=\"14.3686\" cy=\"7.49999\" r=\"6.63158\" fill=\"#F79E1B\" />\r\n    </svg>\r\n  ),\r\n});\r\n\r\nexport const PayPalIcon = createIcon({\r\n  displayName: \"PayPalIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M16.179 2.532C15.142 1.357 13.265.854 10.863.854H3.895a.997.997 0 00-.986.834L.007 19.945a.595.595 0 00.591.686H4.9l1.08-6.8-.033.215a.993.993 0 01.983-.834h2.044c4.017 0 7.16-1.619 8.08-6.3.027-.14.07-.406.07-.406.262-1.732-.001-2.907-.945-3.974z\"\r\n      />\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M18.213 7.393c-.998 4.61-4.184 7.048-9.24 7.048H7.142L5.773 23.1h2.973a.87.87 0 00.862-.731l.035-.184.684-4.297.044-.237a.87.87 0 01.86-.731h.544c3.514 0 6.264-1.416 7.068-5.51.322-1.644.166-3.021-.63-4.017z\"\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const PersonIcon = createIcon({\r\n  displayName: \"PersonIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M14.618 3.338c-.855-.924-2.05-1.432-3.368-1.432-1.325 0-2.524.505-3.375 1.423-.86.928-1.28 2.188-1.181 3.55.195 2.686 2.239 4.87 4.556 4.87s4.358-2.184 4.556-4.87c.1-1.349-.322-2.607-1.188-3.541zM18.984 21.592H3.515a1.363 1.363 0 01-1.063-.489 1.552 1.552 0 01-.316-1.279c.371-2.058 1.529-3.786 3.348-5 1.616-1.076 3.664-1.67 5.766-1.67s4.15.594 5.765 1.67c1.82 1.214 2.977 2.942 3.348 5 .085.471-.03.937-.315 1.279a1.362 1.362 0 01-1.064.49z\"\r\n    />\r\n  ),\r\n});\r\n\r\nexport const ProfileIcon = createIcon({\r\n  displayName: \"ProfileIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"transparent\" />\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v1c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-1c0-2.66-5.33-4-8-4z\"\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const RocketIcon = createIcon({\r\n  displayName: \"RocketIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M20.99 2.182a.209.209 0 00-.156-.16c-2.574-.63-8.521 1.613-11.743 4.833a13.93 13.93 0 00-1.566 1.85c-.994-.087-1.987-.014-2.834.355-2.39 1.052-3.085 3.796-3.279 4.976a.424.424 0 00.464.492l3.837-.423c.002.29.02.578.052.866.02.2.108.386.25.527l1.486 1.482a.86.86 0 00.528.25c.286.033.573.05.86.053l-.42 3.832a.424.424 0 00.492.464c1.178-.19 3.927-.885 4.972-3.274.37-.847.445-1.836.36-2.824a13.96 13.96 0 001.855-1.567c3.232-3.216 5.462-9.03 4.842-11.732zm-8.067 7.896a2.11 2.11 0 112.983-2.984 2.11 2.11 0 01-2.983 2.984z\"\r\n      />\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M7.4 18.054c-.24.241-.627.335-1.092.416-1.044.178-1.967-.725-1.779-1.78.072-.401.283-.962.415-1.094a.192.192 0 00-.16-.328 2.636 2.636 0 00-1.544.753c-1.033 1.034-1.13 4.87-1.13 4.87s3.838-.097 4.872-1.13c.417-.417.682-.961.752-1.546.017-.184-.207-.293-.334-.16z\"\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const SettingsIcon = createIcon({\r\n  displayName: \"SettingsIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  // path can also be an array of elements, if you have multiple paths, lines, shapes, etc.\r\n  path: (\r\n    <g>\r\n      <path d=\"M0,0h24v24H0V0z\" fill=\"none\" />\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const SlackLogo = createIcon({\r\n  displayName: \"SlackLogo\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g clip-path=\"url(#clip0)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\">\r\n      <path\r\n        d=\"M7.832.5c-1.105 0-2 .919-1.999 2.05 0 1.13.895 2.048 2 2.05h2V2.55c.001-1.13-.894-2.048-2-2.05zm0 5.467H2.5c-1.106 0-2.001.918-2 2.05-.002 1.13.894 2.048 2 2.05h5.332c1.106-.001 2.002-.919 2-2.05.002-1.132-.894-2.05-2-2.05z\"\r\n        fill=\"#36C5F0\"\r\n      />\r\n      <path\r\n        d=\"M20.5 8.016c0-1.13-.895-2.048-2-2.05-1.106.002-2.002.92-2 2.05v2.05h2c1.105 0 2-.918 2-2.05zm-5.334 0V2.55c.001-1.13-.893-2.048-2-2.05-1.105 0-2 .919-2 2.05v5.466c-.001 1.131.894 2.049 2 2.05 1.106 0 2.001-.918 2-2.05z\"\r\n        fill=\"#2EB67D\"\r\n      />\r\n      <path\r\n        d=\"M13.166 21c1.106 0 2.001-.919 2-2.05.001-1.13-.894-2.048-2-2.05h-2v2.05c-.001 1.13.894 2.048 2 2.05zm0-5.467h5.333c1.106-.001 2.002-.92 2-2.05.002-1.131-.893-2.049-1.999-2.05h-5.333c-1.106 0-2.001.918-2 2.05-.001 1.13.893 2.049 1.999 2.05z\"\r\n        fill=\"#ECB22E\"\r\n      />\r\n      <path\r\n        d=\"M.5 13.483c-.001 1.13.895 2.049 2 2.05 1.106-.001 2.001-.92 2-2.05v-2.05h-2c-1.105.001-2.001.919-2 2.05zm5.333 0v5.467c-.001 1.13.894 2.048 2 2.05 1.105 0 2-.919 2-2.05v-5.465c.002-1.131-.894-2.05-2-2.05-1.106 0-2 .917-2 2.048z\"\r\n        fill=\"#E01E5A\"\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const SpotifyLogo = createIcon({\r\n  displayName: \"SpotifyLogo\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g clip-path=\"url(#clip0)\">\r\n      <path\r\n        d=\"M10.5 0C4.977 0 .5 4.477.5 10s4.477 10 10 10 10-4.477 10-10c0-5.522-4.477-10-10-10zm4.586 14.422a.623.623 0 01-.857.208c-2.348-1.435-5.304-1.76-8.785-.964a.623.623 0 11-.277-1.216c3.808-.87 7.076-.495 9.712 1.115.294.181.387.564.207.857zm1.223-2.722a.78.78 0 01-1.072.257c-2.687-1.652-6.786-2.13-9.965-1.166a.78.78 0 01-.973-.519.781.781 0 01.52-.972c3.632-1.102 8.147-.569 11.233 1.329a.78.78 0 01.258 1.072zm.106-2.835C13.19 6.95 7.875 6.775 4.797 7.708a.935.935 0 11-.543-1.79c3.533-1.072 9.404-.865 13.115 1.338a.935.935 0 01-.954 1.609z\"\r\n        fill=\"#2EBD59\"\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const SupportIcon = createIcon({\r\n  // Doesn't display the full icon without w and h being specified\r\n  displayName: \"BuildIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M20.885 5.547a.703.703 0 00-1.122-.176l-2.7 2.702a.708.708 0 01-.995 0l-1.167-1.169a.702.702 0 010-.994l2.689-2.69a.704.704 0 00-.21-1.138c-2.031-.908-4.566-.435-6.164 1.152-1.358 1.348-1.763 3.455-1.11 5.78a.698.698 0 01-.197.703L2.593 16.4a2.82 2.82 0 103.981 3.983l6.754-7.332a.699.699 0 01.693-.2 7.885 7.885 0 002.03.279c1.469 0 2.757-.475 3.686-1.39 1.72-1.695 1.983-4.57 1.148-6.192zM4.623 19.901a1.407 1.407 0 11-.305-2.797 1.407 1.407 0 01.305 2.797z\"\r\n    />\r\n  ),\r\n});\r\n\r\nexport const StatsIcon = createIcon({\r\n  displayName: \"StatsIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M4.57 22.297H3.164a1.055 1.055 0 01-1.055-1.054v-6.328a1.055 1.055 0 011.055-1.055H4.57a1.055 1.055 0 011.055 1.055v6.328a1.055 1.055 0 01-1.055 1.054zM14.414 22.296h-1.406a1.055 1.055 0 01-1.055-1.055V10.695a1.055 1.055 0 011.055-1.055h1.406a1.055 1.055 0 011.055 1.055V21.24a1.055 1.055 0 01-1.055 1.055zM19.336 22.297H17.93a1.055 1.055 0 01-1.055-1.055V5.773A1.055 1.055 0 0117.93 4.72h1.406a1.055 1.055 0 011.055 1.054v15.47a1.055 1.055 0 01-1.055 1.054zM9.492 22.297H8.086a1.055 1.055 0 01-1.055-1.055V2.257a1.055 1.055 0 011.055-1.054h1.406a1.055 1.055 0 011.055 1.054v18.985a1.055 1.055 0 01-1.055 1.055z\"\r\n    />\r\n  ),\r\n});\r\n\r\nexport const WalletIcon = createIcon({\r\n  displayName: \"WalletIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M4.447 4.818h14.062c.164 0 .328.01.491.031a2.9 2.9 0 00-3.406-2.441L4.03 4.382h-.013a2.9 2.9 0 00-1.805 1.149 3.848 3.848 0 012.236-.713zM18.51 5.875H4.446a2.816 2.816 0 00-2.813 2.812v8.438a2.816 2.816 0 002.813 2.812h14.062a2.815 2.815 0 002.813-2.812V8.687a2.815 2.815 0 00-2.813-2.812zm-2.088 8.437a1.406 1.406 0 110-2.811 1.406 1.406 0 010 2.811z\"\r\n      />\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M1.656 11.651V7.28c0-.952.528-2.549 2.358-2.895 1.553-.291 3.091-.291 3.091-.291s1.011.703.176.703-.813 1.077 0 1.077 0 1.032 0 1.032L4.007 10.62l-2.35 1.032z\"\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const VisaIcon = createIcon({\r\n  displayName: \"VisaIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <svg\r\n      width=\"26\"\r\n      height=\"20\"\r\n      viewBox=\"0 0 30 9\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        fill-rule=\"evenodd\"\r\n        clip-rule=\"evenodd\"\r\n        d=\"M12.6708 2.96349C12.6568 4.15055 13.653 4.81298 14.4034 5.20684C15.1744 5.61099 15.4333 5.87013 15.4304 6.23147C15.4245 6.78459 14.8153 7.02862 14.2452 7.03812C13.2505 7.05475 12.6723 6.74889 12.2125 6.51753L11.8542 8.32341C12.3155 8.55247 13.1696 8.75217 14.0554 8.76087C16.1345 8.76087 17.4947 7.65543 17.5021 5.94145C17.5102 3.76625 14.7087 3.64579 14.7278 2.67348C14.7344 2.37871 14.9956 2.06408 15.568 1.98406C15.8512 1.94368 16.6332 1.91274 17.5198 2.35252L17.8677 0.605286C17.391 0.418253 16.7782 0.239136 16.0153 0.239136C14.0583 0.239136 12.6819 1.35962 12.6708 2.96349ZM21.2115 0.389687C20.8319 0.389687 20.5118 0.628245 20.3691 0.99433L17.3991 8.63249H19.4767L19.8901 7.40183H22.429L22.6689 8.63249H24.5L22.9021 0.389687H21.2115ZM21.5021 2.61641L22.1016 5.7116H20.4596L21.5021 2.61641ZM10.1518 0.389687L8.51418 8.63249H10.4939L12.1308 0.389687H10.1518ZM7.22303 0.389687L5.16233 6.00003L4.32878 1.22966C4.23097 0.697187 3.84472 0.389687 3.41579 0.389687H0.0471011L0 0.629037C0.691574 0.790671 1.47729 1.0514 1.95326 1.33033C2.24457 1.50067 2.32775 1.64964 2.42336 2.05458L4.00214 8.63249H6.0945L9.3021 0.389687H7.22303Z\"\r\n        fill=\"#4318FF\"\r\n      />\r\n    </svg>\r\n  ),\r\n});\r\n","// import\r\nimport Dashboard from \"views/Dashboard/Dashboard.js\";\r\nimport GeneralInformation from \"views/Dashboard/GeneralInformation\";\r\nimport Profile from \"views/Dashboard/Profile.js\";\r\n\r\nimport {\r\n  HomeIcon,\r\n  StatsIcon,\r\n  CreditIcon,\r\n  PersonIcon,\r\n  DocumentIcon,\r\n  RocketIcon,\r\n} from \"components/Icons/Icons\";\r\n\r\nvar dashRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: <HomeIcon color=\"inherit\" />,\r\n    component: Dashboard,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/GeneralInformation\",\r\n    name: \"Report\",\r\n    icon: <StatsIcon color=\"inherit\" />,\r\n    component: GeneralInformation,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/profile\",\r\n    name: \"Profile\",\r\n    icon: <PersonIcon color=\"inherit\" />,\r\n    secondaryNavbar: true,\r\n    component: Profile,\r\n    layout: \"/admin\",\r\n  },\r\n];\r\nexport default dashRoutes;\r\n","// Chakra imports\r\nimport {\r\n  Flex,\r\n  SimpleGrid,\r\n  Text,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\n// Custom components\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useToast } from '@chakra-ui/react'\r\nimport axios from \"axios\";\r\n\r\nexport default function Dashboard() {\r\n  // Chakra Color Mode\r\n  const toast = useToast()\r\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\r\n  const [ongo, setongo] = useState([])\r\n  const [upco, setupco] = useState([])\r\n  const [refresh, setrefresh] = useState([])\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(async () => {\r\n    var email = localStorage.getItem(\"email\")\r\n    var auth_token = localStorage.getItem(\"token\")\r\n    var id  = localStorage.getItem(\"id\")\r\n\r\n    function refreshpage() {\r\n      var today = new Date();\r\n      var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n      var current = time.split(':',2)\r\n      var st = \"0\"\r\n        if(current[1]<10){\r\n          current[1] = st+current[1]\r\n        }\r\n      current = current.join('.')\r\n      if(refresh.length > 0){\r\n        for (let i = 0; i < refresh.length; i++) {\r\n          if (refresh[i]==current) {\r\n            fetchdata()\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setInterval(()=>{\r\n      refreshpage()\r\n    },1000)\r\n\r\n    let fetchdata = () =>{\r\n      axios.post(\"http://localhost:5000/courses\", {\r\n      email,\r\n      auth_token,\r\n      courses : localStorage.getItem(\"courses\"),\r\n      id \r\n      }).then((items) => {\r\n        var today = new Date();\r\n        var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n        function filters(value) {\r\n          var current = time.split(':',2)\r\n          var st = \"0\"\r\n          if(current[1]<10){\r\n            current[1] = st+current[1]\r\n          }\r\n          current = current.join('.')\r\n          var start = (value.start_time).split(':',2).join(\".\") \r\n          var end = (value.end_time).split(':',2).join(\".\") \r\n          if(parseFloat(current) >= parseFloat(start) && parseFloat(current) <parseFloat(end)){\r\n            refresh.push(end)\r\n            return value;\r\n          }\r\n        }\r\n        function filterz(value) {\r\n          var current = time.split(':',2)\r\n          var st = \"0\"\r\n          if(current[1]<10){\r\n            current[1] = st+current[1]\r\n          }\r\n          current = current.join('.')\r\n          var start = (value.start_time).split(':',2).join(\".\")\r\n          if(parseFloat(current)<parseFloat(start)){\r\n            refresh.push(start)\r\n            return value\r\n          }\r\n        }\r\n        var new_arr = items.data.filter(filters)\r\n        setongo(new_arr);\r\n        var new_arrs = items.data.filter(filterz)\r\n        setupco(new_arrs);\r\n      });\r\n    }\r\n    fetchdata()\r\n  }, []);\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\" pt={{ base: \"500px\", md: \"75px\" }}>\r\n      <Text\r\n        mb=\"15px\"\r\n        ms=\"4px\"\r\n        color={textColor}\r\n        fontWeight=\"bold\"\r\n        fontSize=\"14px\"\r\n      >Logged in as : {localStorage.getItem(\"name\")}</Text> \r\n     <Text\r\n        mb=\"15px\"\r\n        ms=\"4px\"\r\n        color={textColor}\r\n        fontWeight=\"bold\"\r\n        fontSize=\"14px\"\r\n      >Ongoing Classes</Text>\r\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} spacing=\"24px\">\r\n        {ongo.length > 0 ? (\r\n          ongo.map((items) => (\r\n            <div style={{width:\"100%\",cursor:\"pointer\"}} onClick={()=>{\r\n              localStorage.setItem(\"dept\",items.dept)\r\n              localStorage.setItem(\"year\",items.year)\r\n              localStorage.setItem(\"sem\",items.sem)\r\n              localStorage.setItem(\"code\",items.code)\r\n              history.push(\"/admin/ExtracurricularData\")\r\n            }}>\r\n              <Card minH=\"100px\">\r\n                <CardBody>\r\n                <Flex\r\n                  flexDirection=\"column\"\r\n                  align=\"left\"\r\n                  w=\"100%\"\r\n                >\r\n                  <Text\r\n                      mb=\"5px\"\r\n                      color={textColor}\r\n                      fontWeight=\"bold\"\r\n                      fontSize=\"14px\"\r\n                    >\r\n                      {items.name} &nbsp;&nbsp;( {items.code} )\r\n                  </Text>\r\n                  <br/>\r\n                  <Text\r\n                      color={textColor}\r\n                      fontWeight=\"bold\"\r\n                      fontSize=\"14px\"\r\n                    >\r\n                      {\"Staff Name : \"} &nbsp;&nbsp; {localStorage.getItem(\"name\")} \r\n                  </Text>\r\n                </Flex>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        )) \r\n        ) : (\r\n          <>\r\n          <marquee style={{color:\"red\"}}>No ongoing classes today</marquee>\r\n          </>\r\n        )}\r\n\r\n        <Text\r\n          mb=\"15px\"\r\n          ms=\"4px\"\r\n          color={textColor}\r\n          fontWeight=\"bold\"\r\n          fontSize=\"14px\"\r\n        >Upcoming Classes</Text>\r\n        {upco.length > 0 ? (\r\n            upco.map((items) => (\r\n              <div style={{width:\"25%\",cursor:\"pointer\"}} onClick={()=>{toast({\r\n                    title: `This is an upcoming event`,\r\n                    status: 'info',\r\n                    isClosable: true,\r\n                  })}}>  \r\n                \r\n                  <Card minH=\"100px\">\r\n                    <CardBody>\r\n                      <Flex\r\n                        flexDirection=\"column\"\r\n                        align=\"left\"\r\n                        // justify=\"center\"\r\n                        w=\"100%\"\r\n                      >\r\n                          <Text\r\n                            mb=\"5px\"\r\n                            color={textColor}\r\n                            fontWeight=\"bold\"\r\n                            fontSize=\"14px\"\r\n                          >\r\n                            {items.name} &nbsp;&nbsp;( {items.code} )\r\n                        </Text>\r\n                        <br/>\r\n                        <Text\r\n                            color={textColor}\r\n                            fontWeight=\"bold\"\r\n                            fontSize=\"14px\"\r\n                          >\r\n                            {\"Staff Name : \"} &nbsp;&nbsp; {localStorage.getItem(\"name\")} \r\n                        </Text>\r\n                      </Flex>\r\n                    </CardBody>\r\n                  </Card>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <>\r\n              <marquee style={{color:\"red\"}}>No upcoming classes today</marquee>\r\n            </>\r\n        )}\r\n      </SimpleGrid>\r\n    </Flex>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/signInImage.1d609baa.png\";","import React from \"react\";\r\n// import axios from \"axios\";\r\n// Chakra imports\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  Input,\r\n  Text,\r\n  useColorModeValue,\r\n  Image,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\n// Assets\r\nimport signInImage from \"assets/img/signInImage.png\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SignIn() {\r\n  localStorage.setItem(\"token\", -1); // Removing session\r\n  const history = useHistory();\r\n  const titleColor = useColorModeValue(\"orange.300\", \"orange.200\");\r\n  const textColor = useColorModeValue(\"gray.400\", \"white\");\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  localStorage.removeItem(\"name\");\r\n  localStorage.removeItem(\"email\");\r\n  localStorage.removeItem(\"id\");\r\n  localStorage.removeItem(\"courses\");\r\n  // localStorage.clear();\r\n  async function passcheck(){\r\n    document.getElementById(\"result\").innerHTML = \"\";\r\n    var email = document.getElementById(\"email\").value;\r\n    var password = document.getElementById(\"pass\").value;\r\n    if(email=='' || password==''){\r\n      document.getElementById(\"result\").innerHTML = \"Required Email and Password\";\r\n    }\r\n    else{\r\n      let res = null\r\n      try {\r\n        res = await axios.post('http://localhost:5000/login', {\r\n          email,\r\n          password, \r\n        })\r\n        localStorage.setItem(\"token\", res.data.auth_token);\r\n        localStorage.setItem(\"email\", res.data.email);\r\n        localStorage.setItem(\"name\", res.data.name);\r\n        localStorage.setItem(\"id\", res.data.id);\r\n        localStorage.setItem(\"courses\", res.data.courses);\r\n        history.push(\"/admin/dashboard\")\r\n      } catch (err) {\r\n          if (res == null && err.response == undefined) {\r\n            document.getElementById(\"result\").innerHTML = \"Server Down\";\r\n          }\r\n          else{\r\n            document.getElementById(\"result\").innerHTML = err.response.data;\r\n          }\r\n      }\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Flex position=\"relative\" mb=\"40px\">\r\n      <Flex\r\n        h={{ sm: \"initial\", md: \"75vh\", lg: \"85vh\" }}\r\n        w=\"100%\"\r\n        maxW=\"1044px\"\r\n        mx=\"auto\"\r\n        justifyContent=\"space-between\"\r\n        mb=\"30px\"\r\n        pt={{ sm: \"100px\", md: \"0px\" }}\r\n      >\r\n        <Box\r\n          display={{ base: \"none\", md: \"block\" }}\r\n          overflowX=\"hidden\"\r\n          h=\"100%\"\r\n          w=\"40%\"\r\n          paddingTop=\"13rem\"\r\n          position=\"absolute\"\r\n          right=\"0px\"\r\n        >\r\n          <Image src={signInImage} alt=\"Segun Adebayo\" />\r\n        </Box>\r\n        <Flex\r\n          alignItems=\"center\"\r\n          justifyContent=\"start\"\r\n          style={{ userSelect: \"none\" }}\r\n          w={{ base: \"100%\", md: \"50%\", lg: \"42%\" }}\r\n        >\r\n          <Flex\r\n            direction=\"column\"\r\n            w=\"100%\"\r\n            background=\"transparent\"\r\n            p=\"48px\"\r\n            mt={{ md: \"150px\", lg: \"80px\" }}\r\n          >\r\n            <Heading color={titleColor} fontSize=\"32px\" mb=\"10px\">\r\n              Attendance Portal\r\n            </Heading>\r\n            <form>\r\n              <Text\r\n                mb=\"36px\"\r\n                ms=\"4px\"\r\n                color={textColor}\r\n                fontWeight=\"bold\"\r\n                fontSize=\"14px\"\r\n              >\r\n                Enter your email and password to log in\r\n              </Text>\r\n              <FormControl>\r\n                <FormLabel ms=\"4px\" fontSize=\"sm\" fontWeight=\"normal\">\r\n                  Email\r\n                </FormLabel>\r\n                <Input\r\n                  borderRadius=\"15px\"\r\n                  mb=\"24px\"\r\n                  fontSize=\"sm\"\r\n                  type=\"text\"\r\n                  id=\"email\"\r\n                  placeholder=\"Your email adress\"\r\n                  size=\"lg\"\r\n                />\r\n                <FormLabel ms=\"4px\" fontSize=\"sm\" fontWeight=\"normal\">\r\n                  Password\r\n                </FormLabel>\r\n                <Input\r\n                  borderRadius=\"15px\"\r\n                  mb=\"20px\"\r\n                  fontSize=\"sm\"\r\n                  id=\"pass\"\r\n                  type=\"password\"\r\n                  placeholder=\"Your password\"\r\n                  size=\"lg\"\r\n                />\r\n                <Flex\r\n                  flexDirection=\"column\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  maxW=\"100%\"\r\n                  mt=\"0px\"\r\n                >\r\n                  <Text color=\"red\" id=\"result\">\r\n                  </Text>\r\n                </Flex>\r\n                <Button\r\n                  fontSize=\"1rem\"\r\n                 \r\n                  bg=\"orange.300\"\r\n                  w=\"100%\"\r\n                  h=\"45\"\r\n                  mb=\"20px\"\r\n                  color=\"white\"\r\n                  mt=\"15px\"\r\n                  _hover={{\r\n                    bg: \"orange.200\",\r\n                  }}\r\n                  _active={{\r\n                    bg: \"orange.400\",\r\n                  }}\r\n                  id=\"login_btn\"\r\n                  onClick={()=>{passcheck();}}\r\n                >\r\n                  SIGN IN\r\n                </Button>\r\n                \r\n                <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Error!</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <h1 >Incorrect password entered</h1> \r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Retry\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n              </FormControl>\r\n            </form>\r\n          </Flex>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n// Chakra imports\r\nimport {\r\n  Flex,\r\n  Table,\r\n  Tbody,\r\n  Text,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n  useColorModeValue,\r\n  Button,\r\n  Grid,\r\n  GridItem,\r\n  RadioGroup,\r\n  Stack,\r\n  Radio,\r\n} from \"@chakra-ui/react\";\r\n// Custom components\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport { useToast } from '@chakra-ui/react'\r\nimport { Checkbox } from '@chakra-ui/react'\r\n\r\nfunction ExtraCurricularData() {\r\n  const toast = useToast()\r\n  const toastIdRef = React.useRef()\r\n\r\n  function submit() {\r\n    setload(true)\r\n    var email = localStorage.getItem(\"email\")\r\n    var auth_token = localStorage.getItem(\"token\")\r\n    var code = localStorage.getItem(\"code\")\r\n    var data = JSON.stringify([present])\r\n    var dept = localStorage.getItem(\"dept\")\r\n    var year = localStorage.getItem(\"year\")\r\n    var sem = localStorage.getItem(\"sem\")\r\n    axios.post(\"http://localhost:5000/attendance\", {\r\n      email,\r\n      auth_token,\r\n      data,\r\n      dept,\r\n      year,\r\n      sem,\r\n      code\r\n    }).then((results)=>{\r\n      toastIdRef.current = toast({ description: results.data, status: 'success',isClosable: true })\r\n      setload(false)\r\n    }).catch((err)=>{\r\n      toastIdRef.current = toast({ description: err.response.data, status: 'error',isClosable: true })\r\n      setload(false)\r\n    })\r\n  }\r\n\r\n  const [data, setdata] = useState([])\r\n  const [present, setpresent] = useState({})\r\n  const [load, setload] = useState(false)\r\n\r\n  useEffect(async () => {\r\n    var email = localStorage.getItem(\"email\")\r\n    var auth_token = localStorage.getItem(\"token\")\r\n    var dept = localStorage.getItem(\"dept\")\r\n    var year = localStorage.getItem(\"year\")\r\n    var sem = localStorage.getItem(\"sem\")\r\n\r\n    axios.post(\"http://localhost:5000/getdetails\", {\r\n      email,\r\n      auth_token,\r\n      dept,\r\n      year,\r\n      sem\r\n    }).then((items) => {\r\n      for (let i = 0; i < items.data.length; i++) {\r\n        present[items.data[i].register_no] = 1        \r\n      }\r\n      setdata(items.data);\r\n    });\r\n  }, [])\r\n\r\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\r\n\r\n  return (\r\n    <>\r\n    <Flex direction=\"column\" pt={{ base: \"400px\", md: \"75px\" }}>\r\n      <Grid columns={{ sm: 1, md: 2, xl: 2 }} gap={4}>\r\n        <GridItem>\r\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\r\n            <CardHeader p=\"6px 0px 22px 0px\">\r\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\r\n                Attendance Upload\r\n              </Text>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Table variant=\"simple\" color={textColor}>\r\n                <Thead>\r\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\r\n                    <Th color=\"gray.400\">Student Name</Th>\r\n                    <Th color=\"gray.400\">Register No</Th>\r\n                    <Th color=\"gray.400\">Roll No</Th>\r\n                    <Th color=\"gray.400\">Departemnt</Th>\r\n                    <Th color=\"gray.400\"> Present/Absent </Th>\r\n                  </Tr>\r\n                </Thead>\r\n                <Tbody>\r\n                  {data.length > 0 ? (\r\n                    data.map((items) => (\r\n                      <Tr>\r\n                         <Th color=\"white.100\">{items.name}</Th>\r\n                         <Th color=\"white.100\">{items.register_no}</Th>\r\n                         <Th color=\"white.100\">{items.roll_no}</Th>\r\n                         <Th color=\"white.100\">{items.dept}</Th>\r\n                         <Th style={{textTransform:\"none\"}}><RadioGroup defaultValue='1' onChange={(e)=>{\r\n                          present[items.register_no] = e;\r\n                         }}>\r\n                          <Stack spacing={5} direction='row'>\r\n                            <Radio colorScheme='blue' value='1'>\r\n                              Present\r\n                            </Radio>\r\n                            <Radio colorScheme='orange' value='0'>\r\n                              Absent\r\n                            </Radio>\r\n                          </Stack>\r\n                        </RadioGroup></Th>\r\n                      </Tr>\r\n                    ))\r\n                  ) : (<></>) }\r\n                </Tbody>\r\n              </Table>\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <Button\r\n          mt=\"1em\"\r\n          colorScheme=\"orange\"\r\n          alignSelf=\"flex-end\"\r\n          variant=\"solid\"\r\n          width=\"10%\"\r\n          onClick={()=>{submit()}}\r\n          isLoading = {load}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Grid>\r\n    </Flex>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default ExtraCurricularData;\r\n","import SignIn from \"views/Pages/SignIn.js\";\r\nimport ExtraCurricularData from \"views/Pages/ExtraCurricularData\";\r\n\r\n\r\nvar NdashRoutes = [\r\n  {\r\n    path: \"/ExtracurricularData\",\r\n    component: ExtraCurricularData,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/signin\",\r\n    component: SignIn,\r\n    layout: \"/auth\",\r\n  },\r\n];\r\nexport default NdashRoutes;\r\n","import { mode } from \"@chakra-ui/theme-tools\";\r\n\r\nexport const globalStyles = {\r\n  colors: {\r\n    gray: {\r\n      700: \"#1f2733\",\r\n    },\r\n  },\r\n  styles: {\r\n    global: (props) => ({\r\n      body: {\r\n        bg: mode(\"gray.50\", \"gray.800\")(props),\r\n        fontFamily: 'Helvetica, sans-serif'\r\n      },\r\n      html: {\r\n        fontFamily: 'Helvetica, sans-serif'\r\n      }\r\n    }),\r\n  },\r\n};\r\n","// 1. Import the utilities\r\nimport { createBreakpoints } from \"@chakra-ui/theme-tools\";\r\n// 2. Update the breakpoints as key-value pairs\r\nexport const breakpoints = createBreakpoints({\r\n  sm: \"320px\",\r\n  md: \"768px\",\r\n  lg: \"960px\",\r\n  xl: \"1200px\",\r\n});\r\n","export const buttonStyles = {\r\n  components: {\r\n    Button: {\r\n      variants: {\r\n        \"no-hover\": {\r\n          _hover: {\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n        \"transparent-with-icon\": {\r\n          bg: \"transparent\",\r\n          fontWeight: \"bold\",\r\n          borderRadius: \"inherit\",\r\n          cursor: \"pointer\",\r\n          _hover: \"none\",\r\n          _active: {\r\n            bg: \"transparent\",\r\n            transform: \"none\",\r\n            borderColor: \"transparent\",\r\n          },\r\n          _focus: {\r\n            boxShadow: \"none\",\r\n          },\r\n          _hover: {\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n      },\r\n      baseStyle: {\r\n        borderRadius: \"15px\",\r\n        _focus: {\r\n          boxShadow: \"none\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n","const Card = {\r\n  baseStyle: {\r\n    p: \"22px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n    minWidth: \"0px\",\r\n    wordWrap: \"break-word\",\r\n    backgroundClip: \"border-box\",\r\n  },\r\n  variants: {\r\n    panel: (props) => ({\r\n      bg: props.colorMode === \"dark\" ? \"gray.700\" : \"white\",\r\n      width: \"100%\",\r\n      boxShadow: \"0px 3.5px 5.5px rgba(0, 0, 0, 0.02)\",\r\n      borderRadius: \"15px\",\r\n    }),\r\n  },\r\n  defaultProps: {\r\n    variant: \"panel\",\r\n  },\r\n};\r\n\r\nexport const CardComponent = {\r\n  components: {\r\n    Card,\r\n  },\r\n};\r\n","const CardBody = {\r\n  baseStyle: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n  },\r\n};\r\n\r\nexport const CardBodyComponent = {\r\n  components: {\r\n    CardBody,\r\n  },\r\n};\r\n","const CardHeader = {\r\n  baseStyle: {\r\n    display: \"flex\",\r\n    width: \"100%\"\r\n  },\r\n};\r\n\r\nexport const CardHeaderComponent = {\r\n  components: {\r\n    CardHeader,\r\n  },\r\n};\r\n","const MainPanel = {\r\n  baseStyle: {\r\n    float: \"right\",\r\n    maxWidth: \"100%\",\r\n    overflow: \"auto\",\r\n    position: \"relative\",\r\n    maxHeight: \"100%\",\r\n    transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\",\r\n    transitionDuration: \".2s, .2s, .35s\",\r\n    transitionProperty: \"top, bottom, width\",\r\n    transitionTimingFunction: \"linear, linear, ease\",\r\n  },\r\n  variants: {\r\n    main: (props) => ({\r\n      float: \"right\",\r\n    }),\r\n    rtl: (props) => ({\r\n      float: \"left\",\r\n    }),\r\n  },\r\n  defaultProps: {\r\n    variant: \"main\",\r\n  },\r\n};\r\n\r\nexport const MainPanelComponent = {\r\n  components: {\r\n    MainPanel,\r\n  },\r\n};\r\n","const PanelContent = {\r\n  // variants: {\r\n  //   \"with-shadow\": {\r\n  //     boxShadow: \"0 0 2px 2px #efdfde\",\r\n  //     bgColor: \"red\",\r\n  //   },\r\n  // },\r\n  baseStyle: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n  },\r\n};\r\n\r\nexport const PanelContentComponent = {\r\n  components: {\r\n    PanelContent,\r\n  },\r\n};\r\n","const PanelContainer = {\r\n  baseStyle: {\r\n    padding: \"30px 15px\",\r\n    minHeight: \"calc(100vh - 123px)\",\r\n  },\r\n};\r\n\r\nexport const PanelContainerComponent = {\r\n  components: {\r\n    PanelContainer,\r\n  },\r\n};\r\n","import { extendTheme } from \"@chakra-ui/react\";\r\nimport { globalStyles } from \"./styles\";\r\nimport { font } from \"./foundations/fonts\";\r\nimport { breakpoints } from \"./foundations/breakpoints\";\r\nimport { buttonStyles } from \"./components/button\";\r\nimport { badgeStyles } from \"./components/badge\";\r\nimport { linkStyles } from \"./components/link\";\r\nimport { drawerStyles } from \"./components/drawer\";\r\nimport { CardComponent } from \"./additions/card/Card\";\r\nimport { CardBodyComponent } from \"./additions/card/CardBody\";\r\nimport { CardHeaderComponent } from \"./additions/card/CardHeader\";\r\nimport { MainPanelComponent } from \"./additions/layout/MainPanel\";\r\nimport { PanelContentComponent } from \"./additions/layout/PanelContent\";\r\nimport { PanelContainerComponent } from \"./additions/layout/PanelContainer\";\r\n// import { mode } from \"@chakra-ui/theme-tools\";\r\nexport default extendTheme(\r\n  { breakpoints }, // Breakpoints\r\n  globalStyles,\r\n  font, // Global styles\r\n  buttonStyles, // Button styles\r\n  badgeStyles, // Badge styles\r\n  linkStyles, // Link styles\r\n  drawerStyles, // Sidebar variant for Chakra's drawer\r\n  CardComponent, // Card component\r\n  CardBodyComponent, // Card Body component\r\n  CardHeaderComponent, // Card Header component\r\n  MainPanelComponent, // Main Panel component\r\n  PanelContentComponent, // Panel Content component\r\n  PanelContainerComponent // Panel Container component\r\n);\r\n","export const font = {\r\n    body: 'Roboto'\r\n};","import { baseStyle } from \"@chakra-ui/react\";\r\n\r\nexport const badgeStyles = {\r\n    components: {\r\n        Badge: {\r\n            sizes: {\r\n                md: {\r\n                    width: \"65px\",\r\n                    height: \"25px\"\r\n                }\r\n            },\r\n            baseStyle: {\r\n                textTransform: \"capitalize\"\r\n            }\r\n\r\n        }\r\n    }\r\n}","export const linkStyles = {\r\n  components: {\r\n    Link: {\r\n      // 3. We can add a new visual variant\r\n      decoration: \"none\",\r\n      baseStyle: {\r\n        _hover: {\r\n          textDecoration: \"none\",\r\n        },\r\n        _focus: {\r\n          boxShadow: \"none\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n","export const drawerStyles = {\r\n  components: {\r\n    Drawer: {\r\n      // 3. We can add a new visual variant\r\n      variants: {\r\n        \"with-shadow\": {\r\n          placement: \"right\",\r\n          boxShadow: \"0 0 2px 2px #efdfde\",\r\n          bgColor: \"red\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\n\r\nexport function Separator(props) {\r\n  const { variant, children, ...rest } = props;\r\n  return (\r\n    <Flex\r\n      h=\"1px\"\r\n      w=\"100%\"\r\n      bg=\"linear-gradient(90deg, rgba(224, 225, 226, 0) 0%, #E0E1E2 49.52%, rgba(224, 225, 226, 0) 100%)\"\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Flex>\r\n  );\r\n}\r\n","// Chakra Imports\r\nimport {\r\n  Box,\r\n  Button,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerCloseButton,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  Flex,\r\n  Icon,\r\n  Link,\r\n  Switch,\r\n  Text,\r\n  useColorMode,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport GitHubButton from \"react-github-btn\";\r\nimport { Separator } from \"components/Separator/Separator\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport { FaTwitter, FaFacebook } from \"react-icons/fa\";\r\n\r\nexport default function Configurator(props) {\r\n  const { rtlActive, secondary, isOpen, onClose, fixed, ...rest } = props;\r\n  const [switched, setSwitched] = useState(props.isChecked);\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  // Chakra Color Mode\r\n  let fixedDisplay = \"flex\";\r\n  if (props.secondary) {\r\n    fixedDisplay = \"none\";\r\n  }\r\n\r\n  let bgButton = useColorModeValue(\r\n    \"linear-gradient(81.62deg, #313860 2.25%, #151928 79.87%)\",\r\n    \"white\"\r\n  );\r\n  let colorButton = useColorModeValue(\"white\", \"gray.700\");\r\n  const secondaryButtonBg = useColorModeValue(\"white\", \"transparent\");\r\n  const secondaryButtonBorder = useColorModeValue(\"gray.700\", \"white\");\r\n  const secondaryButtonColor = useColorModeValue(\"gray.700\", \"white\");\r\n  const settingsRef = React.useRef();\r\n  return (\r\n    <>\r\n      <Drawer\r\n        isOpen={props.isOpen}\r\n        onClose={props.onClose}\r\n        placement=\"right\"\r\n        finalFocusRef={settingsRef}\r\n        blockScrollOnMount={false}\r\n      >\r\n        <DrawerContent>\r\n          <DrawerHeader pt=\"24px\" px=\"24px\">\r\n            <DrawerCloseButton />\r\n\r\n            <Separator />\r\n          </DrawerHeader>\r\n          <DrawerBody w=\"340px\" ps=\"24px\" pe=\"40px\">\r\n            <Flex flexDirection=\"column\">\r\n              <Box>\r\n                <Text paddingBottom=\"2rem\" fontSize=\"md\" fontWeight=\"600\">\r\n                  Customize this page\r\n                </Text>\r\n              </Box>\r\n              <Box\r\n                display={fixedDisplay}\r\n                justifyContent=\"space-between \"\r\n                mb=\"16px\"\r\n              >\r\n                <Text fontSize=\"md\" fontWeight=\"600\" mb=\"4px\">\r\n                  Navbar Fixed\r\n                </Text>\r\n                <Switch\r\n                  colorScheme=\"orange\"\r\n                  isChecked={switched}\r\n                  onChange={(event) => {\r\n                    if (switched === true) {\r\n                      props.onSwitch(false);\r\n                      setSwitched(false);\r\n                    } else {\r\n                      props.onSwitch(true);\r\n                      setSwitched(true);\r\n                    }\r\n                  }}\r\n                />\r\n              </Box>\r\n              <Flex\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                mb=\"24px\"\r\n              >\r\n                <Text fontSize=\"md\" fontWeight=\"600\" mb=\"4px\">\r\n                  Dark/Light\r\n                </Text>\r\n                <Button onClick={toggleColorMode}>\r\n                  Toggle {colorMode === \"light\" ? \"Dark\" : \"Light\"}\r\n                </Button>\r\n              </Flex>\r\n\r\n              <Separator />\r\n            </Flex>\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\nConfigurator.propTypes = {\r\n  rtlActive: PropTypes.bool,\r\n  secondary: PropTypes.bool,\r\n  isOpen: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  fixed: PropTypes.bool,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/avatar1.eeef2af6.png\";","export default __webpack_public_path__ + \"static/media/avatar2.5692c39d.png\";","export default __webpack_public_path__ + \"static/media/avatar3.9f646ac5.png\";","import React from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\n\r\nexport default function IconBox(props) {\r\n  const { children, ...rest } = props;\r\n\r\n  return (\r\n    <Flex\r\n      alignItems={\"center\"}\r\n      justifyContent={\"center\"}\r\n      borderRadius={\"12px\"}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Flex>\r\n  );\r\n}\r\n","/**\r\n * /*eslint-disable\r\n *\r\n * @format\r\n */\r\n\r\nimport { ChevronDownIcon, HamburgerIcon } from \"@chakra-ui/icons\";\r\n// chakra imports\r\nimport {\r\n  Box,\r\n  Button,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerCloseButton,\r\n  DrawerContent,\r\n  DrawerOverlay,\r\n  Flex,\r\n  Link,\r\n  Stack,\r\n  Text,\r\n  useColorModeValue,\r\n  useDisclosure,\r\n  Image,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuItemOption,\r\n  MenuGroup,\r\n  MenuOptionGroup,\r\n  MenuIcon,\r\n  MenuCommand,\r\n  MenuDivider,\r\n} from \"@chakra-ui/react\";\r\nimport IconBox from \"components/Icons/IconBox\";\r\n\r\nimport { Separator } from \"components/Separator/Separator\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport signInImage from \"assets/img/signInImage.png\";\r\n\r\n// FUNCTIONS\r\n\r\nfunction Sidebar(props) {\r\n  // to check for active links and opened collapses\r\n  let location = useLocation();\r\n  // this is for the rest of the collapses\r\n  const [state, setState] = React.useState({});\r\n  const mainPanel = React.useRef();\r\n  let variantChange = \"0.2s linear\";\r\n  // verifies if routeName is the one active (in browser input)\r\n  const activeRoute = (routeName) => {\r\n    return location.pathname === routeName ? \"active\" : \"\";\r\n  };\r\n  // this function creates the links and collapses that appear in the sidebar (left menu)\r\n  const createLinks = (routes) => {\r\n    const { sidebarVariant, rtlActive } = props;\r\n    // Chakra Color Mode\r\n    let activeBg = useColorModeValue(\"white\", \"gray.700\");\r\n    let inactiveBg = useColorModeValue(\"white\", \"gray.700\");\r\n    let activeColor = useColorModeValue(\"gray.700\", \"white\");\r\n    let inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\r\n    let sidebarActiveShadow = \"0px 7px 11px rgba(0, 0, 0, 0.04)\";\r\n    // Here are all the props that may change depending on sidebar's state.(Opaque or transparent)\r\n    if (sidebarVariant === \"opaque\") {\r\n      activeBg = \"transparent\";\r\n      inactiveBg = useColorModeValue(\"gray.100\", \"gray.600\");\r\n      activeColor = useColorModeValue(\"gray.700\", \"white\");\r\n      inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\r\n      sidebarActiveShadow = \"none\";\r\n    }\r\n\r\n    return routes.map((prop, key) => {\r\n      if (prop.redirect) {\r\n        return null;\r\n      }\r\n      if (prop.category) {\r\n        var st = {};\r\n        st[prop[\"state\"]] = !state[prop.state];\r\n        return (\r\n          <>\r\n            <Text\r\n              color={activeColor}\r\n              fontWeight=\"bold\"\r\n              mb={{\r\n                xl: \"12px\",\r\n              }}\r\n              mx=\"auto\"\r\n              ps={{\r\n                sm: \"10px\",\r\n                xl: \"16px\",\r\n              }}\r\n              py=\"12px\"\r\n            >\r\n              {rtlActive ? prop.rtlName : prop.name}\r\n            </Text>\r\n            {createLinks(prop.views)}\r\n          </>\r\n        );\r\n      }\r\n      return (\r\n        <NavLink to={prop.layout + prop.path}>\r\n          {activeRoute(prop.layout + prop.path) === \"active\" ? (\r\n            <Button\r\n              boxSize=\"initial\"\r\n              justifyContent=\"flex-start\"\r\n              alignItems=\"center\"\r\n              boxShadow={sidebarActiveShadow}\r\n              bg={activeBg}\r\n              transition={variantChange}\r\n              mb={{\r\n                xl: \"12px\",\r\n              }}\r\n              mx={{\r\n                xl: \"auto\",\r\n              }}\r\n              ps={{\r\n                sm: \"10px\",\r\n                xl: \"16px\",\r\n              }}\r\n              py=\"12px\"\r\n              borderRadius=\"15px\"\r\n              _hover=\"none\"\r\n              w=\"100%\"\r\n              _active={{\r\n                bg: \"inherit\",\r\n                transform: \"none\",\r\n                borderColor: \"transparent\",\r\n              }}\r\n              _focus={{\r\n                boxShadow: \"0px 7px 11px rgba(0, 0, 0, 0.04)\",\r\n              }}\r\n            >\r\n              <Flex>\r\n                {typeof prop.icon === \"string\" ? (\r\n                  <Icon>{prop.icon}</Icon>\r\n                ) : (\r\n                  <IconBox\r\n                    bg=\"orange.300\"\r\n                    color=\"white\"\r\n                    h=\"30px\"\r\n                    w=\"30px\"\r\n                    me=\"12px\"\r\n                    transition={variantChange}\r\n                  >\r\n                    {prop.icon}\r\n                  </IconBox>\r\n                )}\r\n                <Text color={inactiveColor} my=\"auto\" fontSize=\"sm\">\r\n                  {document.documentElement.dir === \"rtl\"\r\n                    ? prop.rtlName\r\n                    : prop.name}\r\n                </Text>\r\n              </Flex>\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              boxSize=\"initial\"\r\n              justifyContent=\"flex-start\"\r\n              alignItems=\"center\"\r\n              bg=\"transparent\"\r\n              mb={{\r\n                xl: \"12px\",\r\n              }}\r\n              mx={{\r\n                xl: \"auto\",\r\n              }}\r\n              py=\"12px\"\r\n              ps={{\r\n                sm: \"10px\",\r\n                xl: \"16px\",\r\n              }}\r\n              borderRadius=\"15px\"\r\n              _hover=\"none\"\r\n              w=\"100%\"\r\n              _active={{\r\n                bg: \"inherit\",\r\n                transform: \"none\",\r\n                borderColor: \"transparent\",\r\n              }}\r\n              _focus={{\r\n                boxShadow: \"none\",\r\n              }}\r\n            >\r\n              <Flex>\r\n                {typeof prop.icon === \"string\" ? (\r\n                  <Icon>{prop.icon}</Icon>\r\n                ) : (\r\n                  <IconBox\r\n                    bg={inactiveBg}\r\n                    color=\"orange.300\"\r\n                    h=\"30px\"\r\n                    w=\"30px\"\r\n                    me=\"12px\"\r\n                    transition={variantChange}\r\n                  >\r\n                    {prop.icon}\r\n                  </IconBox>\r\n                )}\r\n                <Text color={inactiveColor} my=\"auto\" fontSize=\"sm\">\r\n                  {rtlActive ? prop.rtlName : prop.name}\r\n                </Text>\r\n              </Flex>\r\n            </Button>\r\n          )}\r\n        </NavLink>\r\n      );\r\n    });\r\n  };\r\n  const { logoText, routes, rtlActive, sidebarVariant } = props;\r\n\r\n  var links = <>{createLinks(routes)}</>;\r\n  //  BRAND\r\n  //  Chakra Color Mode\r\n  const mainText = useColorModeValue(\"gray.700\", \"gray.200\");\r\n  let sidebarBg = \"none\";\r\n  let sidebarRadius = \"0px\";\r\n  let sidebarMargins = \"0px\";\r\n  if (sidebarVariant === \"opaque\") {\r\n    sidebarBg = useColorModeValue(\"white\", \"gray.700\");\r\n    sidebarRadius = \"16px\";\r\n    sidebarMargins = \"16px 0px 16px 16px\";\r\n  }\r\n  var brand = (\r\n    <Box pt={\"25px\"} mb=\"12px\">\r\n      <Link\r\n        href={`${process.env.PUBLIC_URL}/#/`}\r\n        target=\"_blank\"\r\n        display=\"flex\"\r\n        lineHeight=\"100%\"\r\n        mb=\"30px\"\r\n        fontWeight=\"bold\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        fontSize=\"11px\"\r\n      >\r\n        <Box boxSize=\"50px\" me=\"1em\">\r\n          <Image src={signInImage} alt=\"LICET Logo\" />\r\n        </Box>\r\n        <Text fontSize=\"xl\" lineHeight=\"1.2\">\r\n          {logoText}\r\n        </Text>\r\n      </Link>\r\n      <Separator></Separator>\r\n    </Box>\r\n  );\r\n\r\n  // SIDEBAR\r\n  return (\r\n    <Box ref={mainPanel}>\r\n      <Box display={{ sm: \"none\", xl: \"block\" }} position=\"fixed\">\r\n        <Box\r\n          bg={sidebarBg}\r\n          transition={variantChange}\r\n          w=\"260px\"\r\n          maxW=\"260px\"\r\n          ms={{\r\n            sm: \"16px\",\r\n          }}\r\n          my={{\r\n            sm: \"16px\",\r\n          }}\r\n          h=\"calc(100vh - 32px)\"\r\n          ps=\"20px\"\r\n          pe=\"20px\"\r\n          m={sidebarMargins}\r\n          borderRadius={sidebarRadius}\r\n        >\r\n          <Box>{brand}</Box>\r\n          <Stack direction=\"column\" mb=\"40px\">\r\n            <Box>{links}</Box>\r\n          </Stack>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n// FUNCTIONS\r\n\r\nexport function SidebarResponsive(props) {\r\n  // to check for active links and opened collapses\r\n  let location = useLocation();\r\n  // this is for the rest of the collapses\r\n  const [state, setState] = React.useState({});\r\n  const mainPanel = React.useRef();\r\n  // verifies if routeName is the one active (in browser input)\r\n  const activeRoute = (routeName) => {\r\n    return location.pathname === routeName ? \"active\" : \"\";\r\n  };\r\n  // this function creates the links and collapses that appear in the sidebar (left menu)\r\n  const createLinks = (routes) => {\r\n    const { rtlActive } = props;\r\n    // Chakra Color Mode\r\n    const activeBg = useColorModeValue(\"white\", \"gray.700\");\r\n    const inactiveBg = useColorModeValue(\"white\", \"gray.700\");\r\n    const activeColor = useColorModeValue(\"gray.700\", \"white\");\r\n    const inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\r\n\r\n    return routes.map((prop, key) => {\r\n      if (prop.redirect) {\r\n        return null;\r\n      }\r\n      if (prop.category) {\r\n        var st = {};\r\n        st[prop[\"state\"]] = !state[prop.state];\r\n        return (\r\n          <>\r\n            <Text\r\n              color={activeColor}\r\n              fontWeight=\"bold\"\r\n              mb={{\r\n                xl: \"12px\",\r\n              }}\r\n              mx=\"auto\"\r\n              ps={{\r\n                sm: \"10px\",\r\n                xl: \"16px\",\r\n              }}\r\n              py=\"12px\"\r\n            >\r\n              {rtlActive ? prop.rtlName : prop.name}\r\n            </Text>\r\n            {createLinks(prop.views)}\r\n          </>\r\n        );\r\n      }\r\n      return (\r\n        <NavLink to={prop.layout + prop.path}>\r\n          {activeRoute(prop.layout + prop.path) === \"active\" ? (\r\n            <Button\r\n              boxSize=\"initial\"\r\n              justifyContent=\"flex-start\"\r\n              alignItems=\"center\"\r\n              bg={activeBg}\r\n              mb={{\r\n                xl: \"12px\",\r\n              }}\r\n              mx={{\r\n                xl: \"auto\",\r\n              }}\r\n              ps={{\r\n                sm: \"10px\",\r\n                xl: \"16px\",\r\n              }}\r\n              py=\"12px\"\r\n              borderRadius=\"15px\"\r\n              _hover=\"none\"\r\n              w=\"100%\"\r\n              _active={{\r\n                bg: \"inherit\",\r\n                transform: \"none\",\r\n                borderColor: \"transparent\",\r\n              }}\r\n              _focus={{\r\n                boxShadow: \"none\",\r\n              }}\r\n            >\r\n              <Flex>\r\n                {typeof prop.icon === \"string\" ? (\r\n                  <Icon>{prop.icon}</Icon>\r\n                ) : (\r\n                  <IconBox\r\n                    bg=\"orange.300\"\r\n                    color=\"black\"\r\n                    h=\"30px\"\r\n                    w=\"30px\"\r\n                    me=\"12px\"\r\n                  >\r\n                    {prop.icon}\r\n                  </IconBox>\r\n                )}\r\n\r\n                <Text color={inactiveColor} my=\"auto\" fontSize=\"sm\">\r\n                  {document.documentElement.dir === \"rtl\"\r\n                    ? prop.rtlName\r\n                    : prop.name}\r\n                </Text>\r\n              </Flex>\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              boxSize=\"initial\"\r\n              justifyContent=\"flex-start\"\r\n              alignItems=\"center\"\r\n              bg=\"transparent\"\r\n              mb={{\r\n                xl: \"12px\",\r\n              }}\r\n              mx={{\r\n                xl: \"auto\",\r\n              }}\r\n              py=\"12px\"\r\n              ps={{\r\n                sm: \"10px\",\r\n                xl: \"16px\",\r\n              }}\r\n              borderRadius=\"15px\"\r\n              _hover=\"none\"\r\n              w=\"100%\"\r\n              _active={{\r\n                bg: \"inherit\",\r\n                transform: \"none\",\r\n                borderColor: \"transparent\",\r\n              }}\r\n              _focus={{\r\n                boxShadow: \"none\",\r\n              }}\r\n            >\r\n              <Flex>\r\n                {typeof prop.icon === \"string\" ? (\r\n                  <Icon>{prop.icon}</Icon>\r\n                ) : (\r\n                  <IconBox\r\n                    bg={inactiveBg}\r\n                    color=\"orange.300\"\r\n                    h=\"30px\"\r\n                    w=\"30px\"\r\n                    me=\"12px\"\r\n                  >\r\n                    {prop.icon}\r\n                  </IconBox>\r\n                )}\r\n                <Text color={inactiveColor} my=\"auto\" fontSize=\"sm\">\r\n                  {rtlActive ? prop.rtlName : prop.name}\r\n                </Text>\r\n              </Flex>\r\n            </Button>\r\n          )}\r\n        </NavLink>\r\n      );\r\n    });\r\n  };\r\n  const { logoText, routes, rtlActive, ...rest } = props;\r\n\r\n  var links = <>{createLinks(routes)}</>;\r\n  //  BRAND\r\n  //  Chakra Color Mode\r\n  const mainText = useColorModeValue(\"gray.700\", \"gray.200\");\r\n  let hamburgerColor = useColorModeValue(\"gray.500\", \"gray.200\");\r\n  if (props.secondary === true) {\r\n    hamburgerColor = \"white\";\r\n  }\r\n  var brand = (\r\n    <Box pt={\"35px\"} mb=\"8px\">\r\n      <Link\r\n        href={`${process.env.PUBLIC_URL}/#/`}\r\n        target=\"_blank\"\r\n        display=\"flex\"\r\n        lineHeight=\"100%\"\r\n        mb=\"30px\"\r\n        fontWeight=\"bold\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        fontSize=\"11px\"\r\n      >\r\n        <Text fontSize=\"sm\" mt=\"3px\">\r\n          {logoText}\r\n        </Text>\r\n      </Link>\r\n      <Separator></Separator>\r\n    </Box>\r\n  );\r\n\r\n  // SIDEBAR\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const btnRef = React.useRef();\r\n  // Color variables\r\n  return (\r\n    <Flex\r\n      display={{ sm: \"flex\", xl: \"none\" }}\r\n      ref={mainPanel}\r\n      alignItems=\"center\"\r\n    >\r\n      <HamburgerIcon\r\n        color={hamburgerColor}\r\n        w=\"18px\"\r\n        h=\"18px\"\r\n        ref={btnRef}\r\n        colorScheme=\"orange\"\r\n        onClick={onOpen}\r\n      />\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        placement=\"left\"\r\n        finalFocusRef={btnRef}\r\n      >\r\n        <DrawerOverlay />\r\n        <DrawerContent\r\n          w=\"250px\"\r\n          maxW=\"250px\"\r\n          ms={{\r\n            sm: \"16px\",\r\n          }}\r\n          my={{\r\n            sm: \"16px\",\r\n          }}\r\n          borderRadius=\"16px\"\r\n        >\r\n          <DrawerCloseButton\r\n            _focus={{ boxShadow: \"none\" }}\r\n            _hover={{ boxShadow: \"none\" }}\r\n          />\r\n          <DrawerBody maxW=\"250px\" px=\"1rem\">\r\n            <Box maxW=\"100%\" h=\"100vh\">\r\n              <Box>{brand}</Box>\r\n              <Stack direction=\"column\" mb=\"40px\">\r\n                <Box onClick={onClose}>{links}</Box>\r\n              </Stack>\r\n            </Box>\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </Flex>\r\n  );\r\n}\r\n// PROPS\r\n\r\nSidebar.propTypes = {\r\n  rtlActive: PropTypes.bool,\r\n  logoText: PropTypes.string,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  variant: PropTypes.string,\r\n};\r\nSidebarResponsive.propTypes = {\r\n  rtlActive: PropTypes.bool,\r\n  logoText: PropTypes.string,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default Sidebar;\r\n","// Chakra Icons\r\nimport { BellIcon, SearchIcon } from \"@chakra-ui/icons\";\r\n// Chakra Imports\r\nimport {\r\n  Button,\r\n  Flex,\r\n  IconButton,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Menu,\r\n  MenuButton,\r\n  MenuItem,\r\n  MenuList,\r\n  Text,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n// Assets\r\nimport avatar1 from \"assets/img/avatars/avatar1.png\";\r\nimport avatar2 from \"assets/img/avatars/avatar2.png\";\r\nimport avatar3 from \"assets/img/avatars/avatar3.png\";\r\n// Custom Icons\r\nimport { ProfileIcon, SettingsIcon } from \"components/Icons/Icons\";\r\n// Custom Components\r\nimport { ItemContent } from \"components/Menu/ItemContent\";\r\nimport { SidebarResponsive } from \"components/Sidebar/Sidebar\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport routes from \"routes.js\";\r\n\r\nexport default function HeaderLinks(props) {\r\n  const {\r\n    rtlActive,\r\n    variant,\r\n    children,\r\n    fixed,\r\n    secondary,\r\n    onOpen,\r\n    ...rest\r\n  } = props;\r\n\r\n  // Chakra Color Mode\r\n  let mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\r\n  let inputBg = useColorModeValue(\"white\", \"gray.800\");\r\n  let mainText = useColorModeValue(\"gray.700\", \"gray.200\");\r\n  let navbarIcon = useColorModeValue(\"gray.500\", \"gray.200\");\r\n  let searchIcon = useColorModeValue(\"gray.700\", \"gray.200\");\r\n\r\n  if (secondary) {\r\n    navbarIcon = \"white\";\r\n    mainText = \"white\";\r\n  }\r\n  const settingsRef = React.useRef();\r\n  return (\r\n    <Flex\r\n      pe={{ sm: \"0px\", md: \"1px\" }}\r\n      w={{ sm: \"100%\", md: \"auto\" }}\r\n      alignItems=\"center\"\r\n    >\r\n      <NavLink to=\"/auth/signin\">\r\n        <Button\r\n          ms=\"0px\"\r\n          px=\"0px\"\r\n          me={{ sm: \"2px\", md: \"16px\" }}\r\n          color={navbarIcon}\r\n          variant=\"transparent-with-icon\"\r\n          leftIcon={\r\n            <ProfileIcon color={navbarIcon} w=\"22px\" h=\"22px\" me=\"0px\" />\r\n          }\r\n        >\r\n          <Text display={{ sm: \"none\", md: \"flex\" }}>Log Out</Text>\r\n        </Button>\r\n      </NavLink>\r\n      <SidebarResponsive\r\n        logoText={props.logoText}\r\n        secondary={props.secondary}\r\n        routes={routes}\r\n        // logo={logo}\r\n        {...rest}\r\n      />\r\n      <SettingsIcon\r\n        cursor=\"pointer\"\r\n        ms={{ base: \"16px\", xl: \"0px\" }}\r\n        me=\"1px\"\r\n        ref={settingsRef}\r\n        onClick={props.onOpen}\r\n        color={navbarIcon}\r\n        w=\"18px\"\r\n        h=\"18px\"\r\n      />\r\n      {/* <Menu>\r\n        <MenuButton>\r\n          <BellIcon color={navbarIcon} w=\"18px\" h=\"18px\" />\r\n        </MenuButton>\r\n        <MenuList p=\"16px 8px\">\r\n          <Flex flexDirection=\"column\">\r\n            <MenuItem borderRadius=\"8px\" mb=\"10px\">\r\n              <ItemContent\r\n                time=\"13 minutes ago\"\r\n                info=\"from Alicia\"\r\n                boldInfo=\"New Message\"\r\n                aName=\"Alicia\"\r\n                aSrc={avatar1}\r\n              />\r\n            </MenuItem>\r\n            <MenuItem borderRadius=\"8px\" mb=\"10px\">\r\n              <ItemContent\r\n                time=\"2 days ago\"\r\n                info=\"by Josh Henry\"\r\n                boldInfo=\"New Album\"\r\n                aName=\"Josh Henry\"\r\n                aSrc={avatar2}\r\n              />\r\n            </MenuItem>\r\n            <MenuItem borderRadius=\"8px\">\r\n              <ItemContent\r\n                time=\"3 days ago\"\r\n                info=\"Payment succesfully completed!\"\r\n                boldInfo=\"\"\r\n                aName=\"Kara\"\r\n                aSrc={avatar3}\r\n              />\r\n            </MenuItem>\r\n          </Flex>\r\n        </MenuList>\r\n      </Menu> */}\r\n    </Flex>\r\n  );\r\n}\r\n\r\nHeaderLinks.propTypes = {\r\n  rtlActive: PropTypes.bool,\r\n  variant: PropTypes.string,\r\n  fixed: PropTypes.bool,\r\n  secondary: PropTypes.bool,\r\n  onOpen: PropTypes.func,\r\n};\r\n","// Chakra Imports\r\nimport {\r\n  Box,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Flex,\r\n  Link,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\r\n\r\nexport default function AdminNavbar(props) {\r\n  const [scrolled, setScrolled] = useState(false);\r\n  const {\r\n    rtlActive,\r\n    variant,\r\n    children,\r\n    fixed,\r\n    secondary,\r\n    brandText,\r\n    onOpen,\r\n    ...rest\r\n  } = props;\r\n\r\n  // var num = 1;\r\n\r\n  // Here are all the props that may change depending on navbar's type or state.(secondary, variant, scrolled)\r\n  let mainText = useColorModeValue(\"gray.700\", \"gray.200\");\r\n  let secondaryText = useColorModeValue(\"gray.400\", \"gray.200\");\r\n  let navbarPosition = \"absolute\";\r\n  let navbarFilter = \"none\";\r\n  let navbarBackdrop = \"blur(21px)\";\r\n  let navbarShadow = \"none\";\r\n  let navbarBg = \"none\";\r\n  let navbarBorder = \"transparent\";\r\n  let secondaryMargin = \"0px\";\r\n  let paddingX = \"15px\";\r\n  if (props.fixed === true)\r\n    if (scrolled === true) {\r\n      navbarPosition = \"fixed\";\r\n      navbarShadow = useColorModeValue(\r\n        \"0px 7px 23px rgba(0, 0, 0, 0.05)\",\r\n        \"none\"\r\n      );\r\n      navbarBg = useColorModeValue(\r\n        \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.82) 0%, rgba(255, 255, 255, 0.8) 110.84%)\",\r\n        \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.21) 0%, rgba(255, 255, 255, 0) 110.84%)\"\r\n      );\r\n      navbarBorder = useColorModeValue(\"#FFFFFF\", \"rgba(255, 255, 255, 0.31)\");\r\n      navbarFilter = useColorModeValue(\r\n        \"none\",\r\n        \"drop-shadow(0px 7px 23px rgba(0, 0, 0, 0.05))\"\r\n      );\r\n    }\r\n  if (props.secondary) {\r\n    navbarBackdrop = \"none\";\r\n    navbarPosition = \"absolute\";\r\n    mainText = \"white\";\r\n    secondaryText = \"white\";\r\n    secondaryMargin = \"22px\";\r\n    paddingX = \"30px\";\r\n  }\r\n  const changeNavbar = () => {\r\n    if (window.scrollY > 1) {\r\n      setScrolled(true);\r\n    } else {\r\n      setScrolled(false);\r\n    }\r\n  };\r\n  window.addEventListener(\"scroll\", changeNavbar);\r\n  return (\r\n    <Flex\r\n      position={navbarPosition}\r\n      boxShadow={navbarShadow}\r\n      bg={navbarBg}\r\n      borderColor={navbarBorder}\r\n      filter={navbarFilter}\r\n      backdropFilter={navbarBackdrop}\r\n      borderWidth=\"1.5px\"\r\n      borderStyle=\"solid\"\r\n      transitionDelay=\"0s, 0s, 0s, 0s\"\r\n      transitionDuration=\" 0.25s, 0.25s, 0.25s, 0s\"\r\n      transition-property=\"box-shadow, background-color, filter, border\"\r\n      transitionTimingFunction=\"linear, linear, linear, linear\"\r\n      alignItems={{ xl: \"center\" }}\r\n      borderRadius=\"16px\"\r\n      display=\"flex\"\r\n      minH=\"75px\"\r\n      justifyContent={{ xl: \"center\" }}\r\n      lineHeight=\"25.6px\"\r\n      mx=\"auto\"\r\n      mt={secondaryMargin}\r\n      pb=\"8px\"\r\n      right={{ sm: \"15px\", xl: \"30px\" }}\r\n      px={{\r\n        sm: paddingX,\r\n        md: \"30px\",\r\n      }}\r\n      ps={{\r\n        xl: \"12px\",\r\n      }}\r\n      paddingTop=\"8px\"\r\n      top=\"18px\"\r\n      w={{ sm: \"calc(100vw - 30px)\", xl: \"calc(100vw - 75px - 275px)\" }}\r\n    >\r\n      <Flex\r\n        w=\"100%\"\r\n        flexDirection={{\r\n          sm: \"column\",\r\n          md: \"row\",\r\n        }}\r\n        alignItems={{ xl: \"center\" }}\r\n      >\r\n        <Box mb={{ sm: \"8px\", md: \"0px\" }}>\r\n          <Link\r\n            color={mainText}\r\n            bg=\"inherit\"\r\n            borderRadius=\"inherit\"\r\n            fontSize=\"2xl\"\r\n            fontWeight=\"bold\"\r\n          >\r\n            {brandText}\r\n          </Link>\r\n          <Breadcrumb fontSize=\"sm\">\r\n            <BreadcrumbItem color={mainText}>\r\n              <BreadcrumbLink\r\n                // href={\"#/admin\" + num + \"/dashboard\"}\r\n                color={secondaryText}\r\n              >\r\n                Portal\r\n              </BreadcrumbLink>\r\n            </BreadcrumbItem>\r\n\r\n            <BreadcrumbItem color={mainText}>\r\n              <BreadcrumbLink color={mainText}>{brandText}</BreadcrumbLink>\r\n            </BreadcrumbItem>\r\n          </Breadcrumb>\r\n        </Box>\r\n        <Box ms=\"auto\" w={{ sm: \"100%\", md: \"unset\" }}>\r\n          <AdminNavbarLinks\r\n            onOpen={props.onOpen}\r\n            rtlActive={rtlActive}\r\n            logoText={props.logoText}\r\n            secondary={props.secondary}\r\n            fixed={props.fixed}\r\n          />\r\n        </Box>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nAdminNavbar.propTypes = {\r\n  rtlActive: PropTypes.bool,\r\n  brandText: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  secondary: PropTypes.bool,\r\n  fixed: PropTypes.bool,\r\n  onOpen: PropTypes.func,\r\n};\r\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nfunction MainPanel(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"MainPanel\", { variant });\r\n  // Pass the computed styles into the `__css` prop\r\n  return (\r\n    <Box __css={styles} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MainPanel;\r\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nfunction PanelContainer(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"PanelContainer\", { variant });\r\n  // Pass the computed styles into the `__css` prop\r\n  return (\r\n    <Box __css={styles} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default PanelContainer;\r\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nfunction PanelContent(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"PanelContent\", { variant });\r\n  // Pass the computed styles into the `__css` prop\r\n  return (\r\n    <Box __css={styles} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default PanelContent;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport AuthLayout from \"layouts/Auth.js\";\r\nimport AdminLayout from \"layouts/Admin.js\";\r\n\r\nimport \"./components/Style/Style.scss\";\r\n\r\nReactDOM.render(\r\n  <HashRouter name=\"\">\r\n    <Switch>\r\n      <Route path={`/auth`} component={AuthLayout} />\r\n      <Route path={`/admin`} component={AdminLayout} />\r\n      <Redirect from={`/`} to=\"/auth/SignIn\" />\r\n    </Switch>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// chakra imports\r\nimport { Box, ChakraProvider, Portal } from \"@chakra-ui/react\";\r\n// core components\r\n\r\nimport React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport routes from \"routes.js\";\r\nimport routes1 from \"routes1.js\";\r\nimport theme from \"theme/theme.js\";\r\n\r\nexport default function Pages(props) {\r\n  const { ...rest } = props;\r\n  // ref for the wrapper div\r\n  const wrapper = React.createRef();\r\n  React.useEffect(() => {\r\n    document.body.style.overflow = \"unset\";\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {};\r\n  });\r\n\r\n  const getActiveRoute1 = (routes1) => {\r\n    let activeRoute1 = \"Default Brand Text\";\r\n    for (let i = 0; i < routes1.length; i++) {\r\n      if (routes1[i].collapse) {\r\n        let collapseActiveRoute1 = getActiveRoute1(routes1[i].views);\r\n        if (collapseActiveRoute1 !== activeRoute1) {\r\n          return collapseActiveRoute1;\r\n        }\r\n      } else if (routes1[i].category) {\r\n        let categoryActiveRoute1 = getActiveRoute1(routes1[i].views);\r\n        if (categoryActiveRoute1 !== activeRoute1) {\r\n          return categoryActiveRoute1;\r\n        }\r\n      } else {\r\n        if (\r\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\r\n          -1\r\n        ) {\r\n          return routes1[i].name;\r\n        }\r\n      }\r\n    }\r\n    return activeRoute1;\r\n  };\r\n\r\n  const getActiveRoute = (routes) => {\r\n    let activeRoute = \"Default Brand Text\";\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (routes[i].collapse) {\r\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\r\n        if (collapseActiveRoute !== activeRoute) {\r\n          return collapseActiveRoute;\r\n        }\r\n      } else if (routes[i].category) {\r\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\r\n        if (categoryActiveRoute !== activeRoute) {\r\n          return categoryActiveRoute;\r\n        }\r\n      } else {\r\n        if (\r\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\r\n        ) {\r\n          return routes[i].name;\r\n        }\r\n      }\r\n    }\r\n    return activeRoute;\r\n  };\r\n  const getActiveNavbar1 = (routes1) => {\r\n    let activeNavbar1 = false;\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (routes1[i].category) {\r\n        let categoryActiveNavbar1 = getActiveNavbar1(routes1[i].views);\r\n        if (categoryActiveNavbar1 !== activeNavbar1) {\r\n          return categoryActiveNavbar1;\r\n        }\r\n      } else {\r\n        if (\r\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\r\n          -1\r\n        ) {\r\n          if (routes1[i].secondaryNavbar) {\r\n            return routes1[i].secondaryNavbar;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return activeNavbar1;\r\n  };\r\n\r\n  const getActiveNavbar = (routes) => {\r\n    let activeNavbar = false;\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (routes[i].category) {\r\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\r\n        if (categoryActiveNavbar !== activeNavbar) {\r\n          return categoryActiveNavbar;\r\n        }\r\n      } else {\r\n        if (\r\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\r\n        ) {\r\n          if (routes[i].secondaryNavbar) {\r\n            return routes[i].secondaryNavbar;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return activeNavbar;\r\n  };\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return getRoutes(prop.views);\r\n      }\r\n      if (prop.category === \"account\") {\r\n        return getRoutes(prop.views);\r\n      }\r\n      if (prop.layout === \"/auth\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  const getRoutes1 = (routes1) => {\r\n    return routes1.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return getRoutes1(prop.views);\r\n      }\r\n      if (prop.category === \"account\") {\r\n        return getRoutes1(prop.views);\r\n      }\r\n      if (prop.layout === \"/auth\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  const navRef = React.useRef();\r\n  return (\r\n    <ChakraProvider theme={theme} resetCss={false} w=\"100%\">\r\n      <Box ref={navRef} w=\"100%\">\r\n        <Box w=\"100%\">\r\n          <Box ref={wrapper} w=\"100%\">\r\n            <Switch>\r\n              {getRoutes1(routes1)}\r\n              {getRoutes(routes)}\r\n              <Redirect from=\"/auth\" to=\"/auth/login-page\" />\r\n            </Switch>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n","// Chakra imports\r\nimport { ChakraProvider, Portal, useDisclosure } from \"@chakra-ui/react\";\r\nimport Configurator from \"components/Configurator/Configurator\";\r\n// Layout components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport React, { useState } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport routes from \"routes.js\";\r\nimport routes1 from \"routes1.js\";\r\n// Custom Chakra theme\r\nimport theme from \"theme/theme.js\";\r\n\r\n// Custom components\r\nimport MainPanel from \"../components/Layout/MainPanel\";\r\nimport PanelContainer from \"../components/Layout/PanelContainer\";\r\nimport PanelContent from \"../components/Layout/PanelContent\";\r\nexport default function Dashboard(props) {\r\n  const { ...rest } = props;\r\n  // states and functions\r\n  const [sidebarVariant, setSidebarVariant] = useState(\"transparent\");\r\n  const [fixed, setFixed] = useState(false);\r\n  // ref for main panel div\r\n  const mainPanel = React.createRef();\r\n  // functions for changing the states from components\r\n  const getRoute = () => {\r\n    return window.location.pathname !== \"/admin/full-screen-maps\";\r\n  };\r\n  const getActiveRoute = (routes) => {\r\n    let activeRoute = \"Mark Attendance\";\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (routes[i].collapse) {\r\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\r\n        if (collapseActiveRoute !== activeRoute) {\r\n          return collapseActiveRoute;\r\n        }\r\n      } else if (routes[i].category) {\r\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\r\n        if (categoryActiveRoute !== activeRoute) {\r\n          return categoryActiveRoute;\r\n        }\r\n      } else {\r\n        if (\r\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\r\n        ) {\r\n          return routes[i].name;\r\n        }\r\n      }\r\n    }\r\n    return activeRoute;\r\n  };\r\n\r\n  const getActiveRoute1 = (routes1) => {\r\n    let activeRoute1 = \"Mark Attendance\";\r\n    for (let i = 0; i < routes1.length; i++) {\r\n      if (routes1[i].collapse) {\r\n        let collapseActiveRoute1 = getActiveRoute1(routes1[i].views);\r\n        if (collapseActiveRoute1 !== activeRoute1) {\r\n          return collapseActiveRoute1;\r\n        }\r\n      } else if (routes1[i].category) {\r\n        let categoryActiveRoute1 = getActiveRoute1(routes1[i].views);\r\n        if (categoryActiveRoute1 !== activeRoute1) {\r\n          return categoryActiveRoute1;\r\n        }\r\n      } else {\r\n        if (\r\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\r\n          -1\r\n        ) {\r\n          return routes1[i].name;\r\n        }\r\n      }\r\n    }\r\n    return activeRoute1;\r\n  };\r\n  // This changes navbar state(fixed or not)\r\n  const getActiveNavbar = (routes) => {\r\n    let activeNavbar = false;\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (routes[i].category) {\r\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\r\n        if (categoryActiveNavbar !== activeNavbar) {\r\n          return categoryActiveNavbar;\r\n        }\r\n      } else {\r\n        if (\r\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\r\n        ) {\r\n          if (routes[i].secondaryNavbar) {\r\n            return routes[i].secondaryNavbar;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return activeNavbar;\r\n  };\r\n\r\n  const getActiveNavbar1 = (routes1) => {\r\n    let activeNavbar1 = false;\r\n    for (let i = 0; i < routes1.length; i++) {\r\n      if (routes1[i].category) {\r\n        let categoryActiveNavbar1 = getActiveNavbar1(routes1[i].views);\r\n        if (categoryActiveNavbar1 !== activeNavbar1) {\r\n          return categoryActiveNavbar1;\r\n        }\r\n      } else {\r\n        if (\r\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\r\n          -1\r\n        ) {\r\n          if (routes1[i].secondaryNavbar) {\r\n            return routes1[i].secondaryNavbar;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return activeNavbar1;\r\n  };\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return getRoutes(prop.views);\r\n      }\r\n      if (prop.category === \"account\") {\r\n        return getRoutes(prop.views);\r\n      }\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  const getRoutes1 = (routes1) => {\r\n    return routes1.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return getRoutes1(prop.views);\r\n      }\r\n      if (prop.category === \"account\") {\r\n        return getRoutes1(prop.views);\r\n      }\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  // Chakra Color Mode\r\n  return (\r\n    <ChakraProvider theme={theme} resetCss={false}>\r\n      <Sidebar\r\n        routes={routes}\r\n        logoText={\"Attendance Portal\"}\r\n        display=\"none\"\r\n        sidebarVariant={sidebarVariant}\r\n        {...rest}\r\n      />\r\n      <MainPanel\r\n        ref={mainPanel}\r\n        w={{\r\n          base: \"100%\",\r\n          xl: \"calc(100% - 275px)\",\r\n        }}\r\n      >\r\n        <Portal>\r\n          <AdminNavbar\r\n            onOpen={onOpen}\r\n            logoText={\"Hod Dashboard\"}\r\n            brandText={getActiveRoute(routes)}\r\n            secondary={getActiveNavbar(routes)}\r\n            rtlActive={false}\r\n            fixed={fixed}\r\n            {...rest}\r\n          />\r\n        </Portal>\r\n        {getRoute() ? (\r\n          <PanelContent>\r\n            <PanelContainer>\r\n              <Switch>\r\n                {getRoutes(routes)}\r\n                {getRoutes1(routes1)}\r\n                <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\r\n              </Switch>\r\n            </PanelContainer>\r\n          </PanelContent>\r\n        ) : null}\r\n\r\n        <Configurator\r\n          secondary={getActiveNavbar(routes)}\r\n          isOpen={isOpen}\r\n          onClose={onClose}\r\n          isChecked={fixed}\r\n          onSwitch={(value) => {\r\n            setFixed(value);\r\n          }}\r\n          onOpaque={() => setSidebarVariant(\"opaque\")}\r\n          onTransparent={() => setSidebarVariant(\"transparent\")}\r\n        />\r\n      </MainPanel>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n"],"sourceRoot":""}